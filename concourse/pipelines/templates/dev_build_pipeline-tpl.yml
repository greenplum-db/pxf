---
# yamllint disable rule:empty-lines
## ======================================================================
## ANCHORS
## ======================================================================
anchors:
- &destroy_dataproc_1
  task: cleanup_dataproc_1
  config:
    run:
      path: pxf_src/concourse/scripts/cleanup_dataproc_cluster.bash
    inputs:
    - name: pxf_src
    - name: dataproc_env_files
    platform: linux
  image: ccp-7-image
  params:
    GOOGLE_CREDENTIALS: ((ud/pxf/secrets/ccp-ci-service-account-key))
    GOOGLE_PROJECT_ID: ((ud/pxf/common/google-project-id))
    GOOGLE_ZONE: ((ud/pxf/common/google-zone))

- &destroy_dataproc_2
  task: cleanup_dataproc_2
  input_mapping:
    dataproc_env_files: dataproc_2_env_files
  config:
    run:
      path: pxf_src/concourse/scripts/cleanup_dataproc_cluster.bash
    inputs:
    - name: pxf_src
    - name: dataproc_env_files
    platform: linux
  image: ccp-7-image
  params:
    GOOGLE_CREDENTIALS: ((ud/pxf/secrets/kerberos-ccp-ci-service-account-key))
    GOOGLE_PROJECT_ID: ((ud/pxf/common/kerberos-google-project-id))
    GOOGLE_ZONE: ((ud/pxf/common/kerberos-google-zone))

- &destroy_gpdb_cluster
  put: terraform_gpdb
  resource: terraform
  params:
    action: destroy
    env_name_file: terraform_gpdb/name
    terraform_source: ccp_src/google/
  get_params:
    action: destroy

- &destroy_hadoop_cluster
  put: terraform_ipa_hadoop
  params:
    action: destroy
    env_name_file: terraform_ipa_hadoop/name
    terraform_source: pxf_src/concourse/terraform/ipa-multinode-hadoop
  get_params:
    action: destroy

{% if slack_notification %}
- &slack_alert
  on_failure:
    put: slack-alert
    params:
      text: |
        <${ATC_EXTERNAL_URL}/builds/$BUILD_ID|$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME> went red :blob_slightly_frowning_face:
  on_success:
    put: slack-alert
    params:
      text: |
        <${ATC_EXTERNAL_URL}/builds/$BUILD_ID|$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME> went green! :smile:
{% endif %}

## ======================================================================
## RESOURCE TYPES
## ======================================================================
resource_types:

{% if multinode or multinode_no_impersonation or file or gp7_cli or gp7_multinode %}
- name: terraform
  type: registry-image
  source:
    repository: gcr.io/data-gpdb-ud/terraform-resource
    tag: 0.11.15
    username: _json_key
    password: ((ud/pxf/secrets/pxf-cloudbuild-service-account-key))
{% endif %}

{% if multinode or gp7_multinode %}
- name: terraform-0.14.10
  type: registry-image
  source:
    repository: ljfranklin/terraform-resource
    tag: 0.14.10
{% endif %}

- name: gcs
  type: registry-image
  source:
    repository: frodenas/gcs-resource

{% if slack_notification %}
- name: slack-notification
  type: registry-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest
{% endif %}

## ======================================================================
## RESOURCES
## ======================================================================
resources:

- name: pxf-build-dependencies
  type: gcs
  icon: google-drive
  source:
    bucket: ((ud/pxf/common/build-resources-bucket-name))
    json_key: ((ud/pxf/secrets/pxf-storage-service-account-key))
    versioned_file: build-dependencies/pxf-build-dependencies.tar.gz

- name: pxf-automation-dependencies
  type: gcs
  icon: google-drive
  source:
    bucket: ((ud/pxf/common/build-resources-bucket-name))
    json_key: ((ud/pxf/secrets/pxf-storage-service-account-key))
    versioned_file: automation-dependencies/pxf-automation-dependencies.tar.gz

- name: singlecluster-hdp2
  type: gcs
  icon: google-drive
  source:
    bucket: ((ud/pxf/common/build-resources-bucket-name))
    json_key: ((ud/pxf/secrets/pxf-storage-service-account-key))
    versioned_file: singlecluster/HDP2/singlecluster-HDP2.tar.gz

{% if cdh %}
- name: singlecluster-cdh
  type: gcs
  icon: google-drive
  source:
    bucket: ((ud/pxf/common/build-resources-bucket-name))
    json_key: ((ud/pxf/secrets/pxf-storage-service-account-key))
    versioned_file: singlecluster/CDH/singlecluster-CDH.tar.gz
{% endif %}

{% if hdp3 %}
- name: singlecluster-hdp3
  type: gcs
  icon: google-drive
  source:
    bucket: ((ud/pxf/common/build-resources-bucket-name))
    json_key: ((ud/pxf/secrets/pxf-storage-service-account-key))
    versioned_file: singlecluster/HDP3/singlecluster-HDP3.tar.gz
{% endif %}

## ---------- Github Repos ----------
- name: pxf_src
  type: git
  icon: git
  source:
    branch: ((pxf-git-branch))
    uri: ((ud/pxf/common/git-remote))

{% if multinode or multinode_no_impersonation or file or gp7_cli or gp7_multinode %}
- name: ccp_src
  type: git
  source:
    branch: ((ud/pxf/common/gp-concourse-cluster-provisioner-git-branch))
    private_key: ((gp-concourse-cluster-provisioner-git-key))
    uri: ((ud/pxf/common/gp-concourse-cluster-provisioner-git-remote))
{% endif %}

## ---------- Docker Images ----------
{% set gp_ver = None %}
{% for gp_ver in range(5, 7) %}
- name: gpdb[[gp_ver]]-pxf-dev-centos7-image
  type: registry-image
  icon: docker
  source:
    repository: gcr.io/data-gpdb-ud/gpdb-pxf-dev/gpdb[[gp_ver]]-centos7-test-pxf
    tag: ((pxf-dev-image-tag))
    username: _json_key
    password: ((ud/pxf/secrets/pxf-cloudbuild-service-account-key))
{% endfor %}{# gp5, gp6, and gp7 #}

{% for gp_ver in range(6, 8) %}
- name: gpdb[[gp_ver]]-pxf-dev-rocky8-image
  type: registry-image
  icon: docker
  source:
    repository: gcr.io/data-gpdb-ud/gpdb-pxf-dev/gpdb[[gp_ver]]-rocky8-test-pxf
    tag: ((pxf-dev-image-tag))
    username: _json_key
    password: ((ud/pxf/secrets/pxf-cloudbuild-service-account-key))
{% endfor %}

{% if oel7 %}
- name: gpdb6-pxf-dev-oel7-image
  type: registry-image
  icon: docker
  source:
    repository: gcr.io/data-gpdb-ud/gpdb-pxf-dev/gpdb6-oel7-test-pxf
    tag: ((pxf-dev-image-tag))
    username: _json_key
    password: ((ud/pxf/secrets/pxf-cloudbuild-service-account-key))
{% endif %}

{% set gp_ver = 6 %}
- name: gpdb[[gp_ver]]-pxf-dev-ubuntu18-image
  type: registry-image
  icon: docker
  source:
    repository: gcr.io/data-gpdb-ud/gpdb-pxf-dev/gpdb[[gp_ver]]-ubuntu18.04-test-pxf
    tag: ((pxf-dev-image-tag))
    username: _json_key
    password: ((ud/pxf/secrets/pxf-cloudbuild-service-account-key))
{% set gp_ver = None %}

{% if multinode or multinode_no_impersonation or file or gp7_cli or gp7_multinode %}
- name: ccp-7-image
  type: registry-image
  icon: docker
  source:
    repository: gcr.io/data-gpdb-public-images/ccp
    tag: latest
{% endif %}

{% if slack_notification %}
- name: slack-alert
  type: slack-notification
  source:
    url: ((ud-pipeline-bot-[[user]]-webhook))
{% endif %}

## ---------- Greenplum Packages ----------
{% set gp_ver = 5 %}
- name: gpdb[[gp_ver]]_rhel7_rpm_latest-0
  type: gcs
  icon: google-drive
  source:
    bucket: ((ud/pxf/common/pivnet-artifacts-bucket-name))
    json_key: ((ud/pxf/secrets/pxf-storage-service-account-key))
    regexp: latest-0_gpdb[[gp_ver]]/greenplum-db-([[gp_ver]].*)-rhel7-x86_64.rpm
{% set gp_ver = None %}

{% set gp_ver = 6 %}
- name: gpdb[[gp_ver]]_rhel7_rpm_latest-0
  type: gcs
  icon: google-drive
  source:
    bucket: ((ud/pxf/common/pivnet-artifacts-bucket-name))
    json_key: ((ud/pxf/secrets/pxf-storage-service-account-key))
    regexp: latest-0_gpdb[[gp_ver]]/greenplum-db-([[gp_ver]].*)-rhel7-x86_64.rpm

- name: gpdb[[gp_ver]]_ubuntu18_deb_latest-0
  type: gcs
  icon: google-drive
  source:
    bucket: ((ud/pxf/common/pivnet-artifacts-bucket-name))
    json_key: ((ud/pxf/secrets/pxf-storage-service-account-key))
    regexp: latest-0_gpdb[[gp_ver]]/greenplum-db-([[gp_ver]].*)-ubuntu18.04-amd64.deb

- name: gpdb[[gp_ver]]_rhel8_rpm_latest-0
  type: gcs
  icon: google-drive
  source:
    bucket: ((ud/pxf/common/pivnet-artifacts-bucket-name))
    json_key: ((ud/pxf/secrets/pxf-storage-service-account-key))
    regexp: latest-0_gpdb[[gp_ver]]/greenplum-db-([[gp_ver]].*)-rhel8-x86_64.rpm
{% set gp_ver = None %}

{% set gp_ver = 7 %}
- name: gpdb[[gp_ver]]_rhel8_rpm_latest-0
  type: gcs
  icon: google-drive
  source:
    bucket: ((ud/pxf/common/pivnet-artifacts-bucket-name))
    json_key: ((ud/pxf/secrets/pxf-storage-service-account-key))
    regexp: latest-0_gpdb[[gp_ver]]/greenplum-db-([[gp_ver]].*)-el8-x86_64.rpm
{% set gp_ver = None %}

## ---------- PXF 5 Artifact ---------------
{% if multinode %}
- name: pxf5_gp6_rhel7_released
  type: gcs
  source:
    bucket: ((ud/pxf/prod/releng-drop-bucket-name))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: ((ud/pxf/common/releng-drop-path))/gpdb6/pxf-gp6-5.(.*)-2.el7.x86_64.rpm
{% endif %}

## ---------- PXF Build Artifacts ----------
{% set gp_ver = None %}
{% for gp_ver in range(5, 7) %}
- name: pxf_gp[[gp_ver]]_tarball_rhel7
  type: gcs
  icon: google-drive
  source:
    bucket: ((ud/pxf/common/build-bucket-name))
    json_key: ((ud/pxf/secrets/pxf-storage-service-account-key))
    versioned_file: dev/[[user]]-[[branch]]/snapshots/pxf6/pxf-gp[[gp_ver]].el7.tar.gz
{% endfor %}

{% set gp_ver = 6 %}
- name: pxf_gp[[gp_ver]]_tarball_ubuntu18
  type: gcs
  icon: google-drive
  source:
    bucket: ((ud/pxf/common/build-bucket-name))
    json_key: ((ud/pxf/secrets/pxf-storage-service-account-key))
    versioned_file: dev/[[user]]-[[branch]]/snapshots/pxf6/pxf-gp[[gp_ver]]-ubuntu18.04.tar.gz

- name: pxf_fdw_gp[[gp_ver]]_tarball_rhel8
  type: gcs
  icon: google-drive
  source:
    bucket: ((ud/pxf/common/build-bucket-name))
    json_key: ((ud/pxf/secrets/pxf-storage-service-account-key))
    versioned_file: dev/[[user]]-[[branch]]/snapshots/pxf6/pxf-fdw-gp[[gp_ver]].el8.tar.gz
{% set gp_ver = None %}

{% for gp_ver in range(6, 8) %}
- name: pxf_gp[[gp_ver]]_tarball_rhel8
  type: gcs
  icon: google-drive
  source:
    bucket: ((ud/pxf/common/build-bucket-name))
    json_key: ((ud/pxf/secrets/pxf-storage-service-account-key))
    versioned_file: dev/[[user]]-[[branch]]/snapshots/pxf6/pxf-gp[[gp_ver]].el8.tar.gz
{% endfor %}

## ---------- Auxiliary Resources ----------
{% if multinode or multinode_no_impersonation or file or gp7_cli or gp7_multinode %}
- name: terraform
  type: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
      GOOGLE_CREDENTIALS: ((ud/pxf/secrets/ccp-ci-service-account-key))
    vars:
      project_id: ((ud/pxf/common/google-project-id))
    storage:
      access_key_id: ((tf-machine-access-key-id))
      secret_access_key: ((tf-machine-secret-access-key))
      region_name: ((ud/common/aws-region))
      bucket: ((ud/pxf/common/tf-bucket-name))
      bucket_path: ((tf-bucket-path))
{% endif %}

{% if multinode or gp7_multinode %}
- name: terraform_ipa_hadoop
  type: terraform-0.14.10
  source:
    env:
      GOOGLE_CREDENTIALS: ((ud/pxf/secrets/ipa-ccp-ci-service-account-key))
    delete_on_failure: true
    storage:
      bucket: ((ud/pxf/common/tf-bucket-name))
      bucket_path: ((ud/pxf/common/tf-bucket-path-hadoop))
      region_name: ((ud/common/aws-region))
      access_key_id: ((tf-machine-access-key-id))
      secret_access_key: ((tf-machine-secret-access-key))
{% endif %}

## ======================================================================
## JOBS
## ======================================================================
jobs:

## ======================================================================
##                    Build and Basic SingleNode Test Swimlanes
## ----------------------------------------------------------------------
##
## The creation of the PXF Build and Basic SingleNode test jobs are driven by
## the following platform_gp_combinations dictionary definition:
##
##   gp_ver: GPDB Major Version
##   build_os: OS Platform in which the build was performed
##   test_os: OS platform in which test jobs are executed
##   os_ver: OS Major version
##
## NOTE: The oel7 platform only includes a test job. The inclusion of
## the oel7 test job is controlled by the Makefile OEL7 (disbled by
## default) parameter.
## ----------------------------------------------------------------------
{% set platform_gp_combinations = [
    {'gp_ver': '5', 'build_os': 'centos', 'test_os': 'centos', 'os_ver': '7'},
    {'gp_ver': '6', 'build_os': 'centos', 'test_os': 'centos', 'os_ver': '7'},
    {'gp_ver': '6', 'build_os': 'rocky', 'test_os': 'rocky', 'os_ver': '8'},
    {'gp_ver': '6', 'build_os': 'centos', 'test_os': 'oel', 'os_ver': '7'},
    {'gp_ver': '6', 'build_os': 'ubuntu', 'test_os': 'ubuntu', 'os_ver': '18'},
    {'gp_ver': '7', 'build_os': 'rocky', 'test_os': 'rocky', 'os_ver': '8'}] %}

{% for config in platform_gp_combinations %}

    {% set test_platform = config.test_os ~ config.os_ver %}
    {% set build_platform = config.build_os ~ config.os_ver %}

    {% if config.test_os in ['ubuntu'] %}
      {% set pkg_type = 'deb' %}
      {% set gpdb_os_platform = 'ubuntu' %}
      {% set pxf_tarball_filename = 'dist/pxf-gp' ~ config.gp_ver ~ '-*-ubuntu' ~ config.os_ver ~ '.04' ~ '.tar.gz' %}
      {% set pxf_fdw_tarball_filename = '' %}{# Doesn't apply for ubuntu platform #}
    {% else %} {# Else section applies to centos, rocky and oel platforms #}
      {% set pkg_type = 'rpm' %}
      {% set gpdb_os_platform = 'rhel' %}
      {% set pxf_tarball_filename = 'dist/pxf-gp' ~ config.gp_ver ~ '-*.el' ~ config.os_ver ~ '.tar.gz' %}
      {% set pxf_fdw_tarball_filename = 'dist/pxf-fdw-gp' ~ config.gp_ver ~ '-*.el' ~ config.os_ver ~ '.tar.gz' %}
    {% endif %}

    {# OEL doesn't have a separate build job #}
    {% if config.test_os != 'oel' %}
      {% include 'jobs/build-tpl.yml' %}
    {% endif %}

    {% if config.test_os != 'oel' or oel7 %}
      {% include 'jobs/test-tpl.yml' %}
    {% endif %}
{% endfor %}

## ======================================================================
##                             FDW Test Job
## ----------------------------------------------------------------------
##
## The creation of the PXF FDW test jobs are driven by the following
## platform_gp_combinations dictionary definition:
##
##   gp_ver: GPDB Major Version
##   build_os: OS Platform in which the build was performed
##   test_os: OS platform in which test jobs are executed
##   os_ver: OS Major version
##
## ----------------------------------------------------------------------
{% set platform_gp_combinations = [
    {'gp_ver': '6', 'build_os': 'rocky', 'test_os': 'rocky', 'os_ver': '8'},
    {'gp_ver': '7', 'build_os': 'rocky', 'test_os': 'rocky', 'os_ver': '8'}] %}

{% for config in platform_gp_combinations %}

    {% set test_platform = config.test_os ~ config.os_ver %}
    {% set build_platform = config.build_os ~ config.os_ver %}

    {% set gpdb_os_platform = 'rhel' %}{# This only supports RHEL platform #}
    {% set pkg_type = 'rpm' %}

- name: test_pxf-fdw-gp[[config.gp_ver]]-hdp2_on_[[test_platform]]
  plan:
  - in_parallel:
    - get: pxf_src
      passed: [build_pxf-gp[[config.gp_ver]]_on_[[build_platform]]]
      trigger: true
    - get: pxf_tarball
      resource: pxf_gp[[config.gp_ver]]_tarball_[[gpdb_os_platform]][[config.os_ver]]
      passed: [build_pxf-gp[[config.gp_ver]]_on_[[build_platform]]]
{% if config.gp_ver == '6' %}
    - get: pxf_fdw_tarball
      resource: pxf_fdw_gp[[config.gp_ver]]_tarball_[[gpdb_os_platform]][[config.os_ver]]
      passed: [build_pxf-gp[[config.gp_ver]]_on_[[build_platform]]]
{% endif %}
    - get: gpdb_package
      resource: gpdb[[config.gp_ver]]_[[gpdb_os_platform]][[config.os_ver]]_[[pkg_type]]_latest-0
      passed: [build_pxf-gp[[config.gp_ver]]_on_[[build_platform]]]
    - get: gpdb[[config.gp_ver]]-pxf-dev-[[test_platform]]-image
      passed: [build_pxf-gp[[config.gp_ver]]_on_[[build_platform]]]
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-hdp2
  - task: test_pxf-fdw-gp[[config.gp_ver]]-hdp2_on_[[test_platform]]
    file: pxf_src/concourse/tasks/test.yml
    image: gpdb[[config.gp_ver]]-pxf-dev-[[test_platform]]-image
    params:
      ACCESS_KEY_ID: ((tf-machine-access-key-id))
      GP_VER: [[config.gp_ver]]
      GROUP: gpdb,proxy,profile
      SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
      USE_FDW: true
{% endfor %}

## ---------- GP7 PXF CLI tests ----------

{% if gp7_cli %}
{% set gp_ver = 7 %}
{% set passed = '[build_pxf-gp7_on_rocky8]' %}
{% include 'jobs/cli-tpl.yml' %}
{% set passed = None %}
{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}{# if gp7_cli ends here #}
{% set gp_ver = None %}

## ---------- Extended Tests ----------
{% set gp_ver = 6 %}
{% if hdp2 %}
- name: test_pxf-gp[[gp_ver]]-hdp2-no-impers_on_rhel7
  plan:
  - in_parallel:
    - get: pxf_src
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
      trigger: true
    - get: pxf_tarball
      resource: pxf_gp[[gp_ver]]_tarball_rhel7
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb_package
      resource: gpdb[[gp_ver]]_rhel7_rpm_latest-0
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb[[gp_ver]]-pxf-dev-centos7-image
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-hdp2
  - task: test_pxf-gp[[gp_ver]]-hdp2-no-impers_on_rhel7
    file: pxf_src/concourse/tasks/test.yml
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    params:
      GP_VER: [[gp_ver]]
      IMPERSONATION: false
{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}

{% if hdp3 %}
- name: test_pxf-gp[[gp_ver]]-hdp3_on_rhel7
  plan:
  - in_parallel:
    - get: pxf_src
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
      trigger: true
    - get: pxf_tarball
      resource: pxf_gp[[gp_ver]]_tarball_rhel7
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb_package
      resource: gpdb[[gp_ver]]_rhel7_rpm_latest-0
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb[[gp_ver]]-pxf-dev-centos7-image
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-hdp3
  - task: test_pxf-gp[[gp_ver]]-hdp3_on_rhel7
    file: pxf_src/concourse/tasks/test.yml
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    params:
      ACCESS_KEY_ID: ((tf-machine-access-key-id))
      GP_VER: [[gp_ver]]
      GROUP: gpdb,proxy,profile
      SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}

{% if jdk11 %}
- name: test_pxf-gp[[gp_ver]]-hdp2-jdk11_on_rhel7
  plan:
  - in_parallel:
    - get: pxf_src
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
      trigger: true
    - get: pxf_tarball
      resource: pxf_gp[[gp_ver]]_tarball_rhel7
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb_package
      resource: gpdb[[gp_ver]]_rhel7_rpm_latest-0
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb[[gp_ver]]-pxf-dev-centos7-image
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-hdp2
  - task: test_pxf-gp[[gp_ver]]-hdp2-jdk11_on_rhel7
    file: pxf_src/concourse/tasks/test.yml
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    params:
      ACCESS_KEY_ID: ((tf-machine-access-key-id))
      GP_VER: [[gp_ver]]
      GROUP: gpdb,proxy,profile
      RUN_JDK_VERSION: 11
      SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}

{% if cdh %}
- name: test_pxf-gp[[gp_ver]]-cdh_on_rhel7
  plan:
  - in_parallel:
    - get: pxf_src
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
      trigger: true
    - get: pxf_tarball
      resource: pxf_gp[[gp_ver]]_tarball_rhel7
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb_package
      resource: gpdb[[gp_ver]]_rhel7_rpm_latest-0
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb[[gp_ver]]-pxf-dev-centos7-image
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-cdh
  - task: test_pxf-gp[[gp_ver]]-cdh_on_rhel7
    file: pxf_src/concourse/tasks/test.yml
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    # CDH often fails on HBASE permission grant
    attempts: 3
    params:
      ACCESS_KEY_ID: ((tf-machine-access-key-id))
      GP_VER: [[gp_ver]]
      GROUP: gpdb,proxy,profile
      HADOOP_CLIENT: CDH
      SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}

## ---------- FILE tests -----------------

{% if file %}
- name: test_pxf-gp[[gp_ver]]-file-no-impers_on_rhel7
  max_in_flight: 2
  plan:
  - in_parallel:
    - get: pxf_src
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
      trigger: true
    - get: pxf_tarball
      resource: pxf_gp[[gp_ver]]_tarball_rhel7
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb_package
      resource: gpdb[[gp_ver]]_rhel7_rpm_latest-0
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb[[gp_ver]]-pxf-dev-centos7-image
    - get: ccp_src
    - get: ccp-7-image
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-hdp2
  - put: terraform_gpdb
    resource: terraform
    params:
      action: create
      delete_on_failure: true
      generate_random_name: true
      terraform_source: ccp_src/google/
      vars:
        PLATFORM: centos7
        number_of_nodes: ((number_of_gpdb_nodes))
        segments_per_host: 4
        instance_type: n1-standard-4
        ccp_reap_minutes: 60
  - task: generate_greenplum_cluster
    input_mapping:
      gpdb_rpm: gpdb_package
      terraform: terraform_gpdb
    file: ccp_src/ci/tasks/gen_cluster.yml
    image: ccp-7-image
    params:
      AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
      AWS_DEFAULT_REGION: ((ud/common/aws-region))
      BUCKET_PATH: ((tf-bucket-path))
      BUCKET_NAME: ((ud/pxf/common/tf-bucket-name))
      PLATFORM: centos7
      CLOUD_PROVIDER: google
      GPDB_RPM: true
  - task: initialize_greenplum
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-nfs
    input_mapping:
      terraform: terraform_gpdb
    file: pxf_src/concourse/tasks/install_nfs_on_ccp.yml
    image: ccp-7-image
    params:
      BASE_PATH: /mnt/nfs/var/nfsshare
  - task: setup_pxf
    input_mapping:
      terraform: terraform_gpdb
    file: pxf_src/concourse/tasks/install_pxf_on_ccp.yml
    image: ccp-7-image
    params:
      GOOGLE_PROJECT_ID: ((ud/pxf/common/google-project-id))
      GP_VER: [[gp_ver]]
      IMPERSONATION: true
      INSTALL_GPHDFS: false
      PXF_JVM_OPTS: ((pxf-jvm-opts))
      SKIP_HADOOP_SETUP: true
  - task: test_pxf-gp[[gp_ver]]-file-no-impers_on_rhel7
    on_success:
      do:
      - put: terraform_gpdb
        resource: terraform
        params:
          action: destroy
          env_name_file: terraform_gpdb/name
          terraform_source: ccp_src/google/
        get_params:
          action: destroy
    privileged: true
    file: pxf_src/concourse/tasks/test_pxf_on_ccp.yml
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    params:
      GOOGLE_PROJECT_ID: ((ud/pxf/common/google-project-id))
      BASE_PATH: /mnt/nfs/var/nfsshare
      GP_VER: [[gp_ver]]
      GROUP: hcfs
      IMPERSONATION: false
      PROTOCOL: file
{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}

## ---------- HCFS Cloud tests ----------

{% if s3 %}
- name: test_pxf-gp[[gp_ver]]-s3_on_rhel7
  plan:
  - in_parallel:
    - get: pxf_src
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
      trigger: true
    - get: pxf_tarball
      resource: pxf_gp[[gp_ver]]_tarball_rhel7
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb_package
      resource: gpdb[[gp_ver]]_rhel7_rpm_latest-0
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb[[gp_ver]]-pxf-dev-centos7-image
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-hdp2
  - task: test_pxf-gp[[gp_ver]]-s3_on_rhel7
    file: pxf_src/concourse/tasks/test.yml
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    params:
      ACCESS_KEY_ID: ((tf-machine-access-key-id))
      GP_VER: [[gp_ver]]
      GROUP: hcfs,s3
      PROTOCOL: s3
      SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
{% if slack_notification %}
    <<: *slack_alert
{% endif %}

- name: test_pxf-gp[[gp_ver]]-s3-no-impers_on_rhel7
  plan:
  - in_parallel:
    - get: pxf_src
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
      trigger: true
    - get: pxf_tarball
      resource: pxf_gp[[gp_ver]]_tarball_rhel7
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb_package
      resource: gpdb[[gp_ver]]_rhel7_rpm_latest-0
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb[[gp_ver]]-pxf-dev-centos7-image
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-hdp2
  - task: test_pxf-gp[[gp_ver]]-s3-no-impers_on_rhel7
    file: pxf_src/concourse/tasks/test.yml
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    params:
      ACCESS_KEY_ID: ((tf-machine-access-key-id))
      GP_VER: [[gp_ver]]
      GROUP: hcfs,s3
      IMPERSONATION: false
      PROTOCOL: s3
      SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}

{% if adl %}
- name: test_pxf-gp[[gp_ver]]-adl-no-impers_on_rhel7
  plan:
  - in_parallel:
    - get: pxf_src
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
      trigger: true
    - get: pxf_tarball
      resource: pxf_gp[[gp_ver]]_tarball_rhel7
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb_package
      resource: gpdb[[gp_ver]]_rhel7_rpm_latest-0
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb[[gp_ver]]-pxf-dev-centos7-image
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-hdp2
  - task: test_pxf-gp[[gp_ver]]-adl-no-impers_on_rhel7
    file: pxf_src/concourse/tasks/test.yml
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    params:
      ADL_ACCOUNT: ((ud/pxf/common/adl-account))
      ADL_CLIENT_ID: ((ud/pxf/secrets/adl-client-id))
      ADL_CREDENTIAL: ((ud/pxf/secrets/adl-credential))
      ADL_REFRESH_URL: ((ud/pxf/common/adl-refresh-url))
      GP_VER: [[gp_ver]]
      GROUP: hcfs
      IMPERSONATION: false
      PROTOCOL: adl
{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}

{% if wasb %}
- name: test_pxf-gp[[gp_ver]]-wasb-no-impers_on_rhel7
  plan:
  - in_parallel:
    - get: pxf_src
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
      trigger: true
    - get: pxf_tarball
      resource: pxf_gp[[gp_ver]]_tarball_rhel7
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb_package
      resource: gpdb[[gp_ver]]_rhel7_rpm_latest-0
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb[[gp_ver]]-pxf-dev-centos7-image
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-hdp2
  - task: test_pxf-gp[[gp_ver]]-wasb-no-impers_on_rhel7
    file: pxf_src/concourse/tasks/test.yml
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    params:
      WASB_ACCOUNT_NAME: ((ud/pxf/common/wasb-account-name))
      WASB_ACCOUNT_KEY: ((ud/pxf/secrets/wasb-account-key))
      GP_VER: [[gp_ver]]
      GROUP: hcfs
      IMPERSONATION: false
      PROTOCOL: wasbs
{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}

{% if gs %}
- name: test_pxf-gp[[gp_ver]]-gs-no-impers_on_rhel7
  plan:
  - in_parallel:
    - get: pxf_src
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
      trigger: true
    - get: pxf_tarball
      resource: pxf_gp[[gp_ver]]_tarball_rhel7
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb_package
      resource: gpdb[[gp_ver]]_rhel7_rpm_latest-0
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb[[gp_ver]]-pxf-dev-centos7-image
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-hdp2
  - task: test_pxf-gp[[gp_ver]]-gs-no-impers_on_rhel7
    file: pxf_src/concourse/tasks/test.yml
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    params:
      GOOGLE_CREDENTIALS: ((ud/pxf/secrets/gsc-ci-service-account-key))
      GP_VER: [[gp_ver]]
      GROUP: hcfs
      IMPERSONATION: false
      PROTOCOL: gs
{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}

{% if minio %}
- name: test_pxf-gp[[gp_ver]]-minio-no-impers_on_rhel7
  plan:
  - in_parallel:
    - get: pxf_src
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
      trigger: true
    - get: pxf_tarball
      resource: pxf_gp[[gp_ver]]_tarball_rhel7
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb_package
      resource: gpdb[[gp_ver]]_rhel7_rpm_latest-0
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb[[gp_ver]]-pxf-dev-centos7-image
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-hdp2
  - task: test_pxf-gp[[gp_ver]]-minio-no-impers_on_rhel7
    file: pxf_src/concourse/tasks/test.yml
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    params:
      GP_VER: [[gp_ver]]
      GROUP: hcfs
      IMPERSONATION: false
      PROTOCOL: minio
{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}

## ---------- Multi-node tests ----------
{% if multinode %}
- name: test_pxf-gp[[gp_ver]]-hdp2-secure-multi-impers_on_rhel7
  max_in_flight: 2
  plan:
  - in_parallel:
    - get: pxf_src
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
      trigger: true
    - get: pxf_artifact
      resource: pxf5_gp6_rhel7_released   # for upgrade test
    - get: pxf_tarball
      resource: pxf_gp[[gp_ver]]_tarball_rhel7
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb_package
      resource: gpdb[[gp_ver]]_rhel7_rpm_latest-0
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb[[gp_ver]]-pxf-dev-centos7-image
    - get: ccp_src
    - get: ccp-7-image
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-hdp2
  - in_parallel:
    - do:
      - put: terraform_gpdb
        resource: terraform
        params:
          action: create
          delete_on_failure: true
          generate_random_name: true
          terraform_source: ccp_src/google/
          vars:
            PLATFORM: centos7
            number_of_nodes: ((number_of_gpdb_nodes))
            extra_nodes: 1
            segments_per_host: 4
            instance_type: n1-standard-4
            ccp_reap_minutes: 120
            standby_master: true
      - task: generate_greenplum_cluster
        input_mapping:
          gpdb_rpm: gpdb_package
          terraform: terraform_gpdb
        file: ccp_src/ci/tasks/gen_cluster.yml
        image: ccp-7-image
        params:
          AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
          AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
          AWS_DEFAULT_REGION: ((ud/common/aws-region))
          BUCKET_PATH: ((tf-bucket-path))
          BUCKET_NAME: ((ud/pxf/common/tf-bucket-name))
          PLATFORM: centos7
          CLOUD_PROVIDER: google
          GPDB_RPM: true
      - in_parallel:
        - task: initialize_greenplum
          file: ccp_src/ci/tasks/gpinitsystem.yml
        - task: install_hadoop
          file: pxf_src/concourse/tasks/install_hadoop.yml
          image: gpdb[[gp_ver]]-pxf-dev-centos7-image
          params:
            ACCESS_KEY_ID: ((tf-machine-access-key-id))
            SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
            IMPERSONATION: ((enable-impersonation-multinode))
    - task: generate_hadoop_cluster_1
      file: pxf_src/concourse/tasks/install_dataproc.yml
      params:
        GOOGLE_CREDENTIALS: ((ud/pxf/secrets/ccp-ci-service-account-key))
        GOOGLE_PROJECT_ID: ((ud/pxf/common/google-project-id))
        GOOGLE_ZONE: ((ud/pxf/common/google-zone))
        IMAGE_VERSION: ((dataproc-image-version))
        KERBEROS: ((kerberos-enabled))
        ccp_reap_minutes: 120
    - task: generate_hadoop_cluster_2
      file: pxf_src/concourse/tasks/install_dataproc.yml
      output_mapping:
        dataproc_env_files: dataproc_2_env_files
      params:
        GOOGLE_CREDENTIALS: ((ud/pxf/secrets/kerberos-ccp-ci-service-account-key))
        GOOGLE_PROJECT_ID: ((ud/pxf/common/kerberos-google-project-id))
        GOOGLE_ZONE: ((ud/pxf/common/kerberos-google-zone))
        HADOOP_USER: gpuser
        IMAGE_VERSION: ((dataproc-image-version))
        INITIALIZATION_SCRIPT: gs://data-gpdb-ud-kerberos-scripts/scripts/initialization-for-kerberos.sh
        INSTANCE_TAGS: bosh-network,data-gpdb-ud-access
        KERBEROS: ((kerberos-enabled))
        KEY: dataproc-kerberos-key
        KEYRING: dataproc-kerberos
        ccp_reap_minutes: 120
        NO_ADDRESS: false
        PROXY_USER: gpuser
        SECRETS_BUCKET: ((ud/pxf/secrets/kerberos-pxf-secrets-bucket-name))
    - do:   # Generate IPA Hadoop cluster
      - put: terraform_ipa_hadoop
        params:
          action: create
          generate_random_name: true
          terraform_source: pxf_src/concourse/terraform/ipa-multinode-hadoop
          vars:
            gcp_project: ((ud/pxf/common/ipa-google-project-id))
      - task: generate_multinode_hadoop_cluster
        file: pxf_src/concourse/tasks/install_multinode_hadoop.yml
        image: gpdb[[gp_ver]]-pxf-dev-centos7-image
        params:
          ANSIBLE_VAR_gcp_storage_bucket: ((ud/pxf/common/build-resources-bucket-name))
          ANSIBLE_VAR_ipa_password: ((ud/pxf/secrets/ipa-password))
          ANSIBLE_VAR_ssl_store_password: ((ud/pxf/secrets/ssl-store-password))
  - task: setup_pxf_5_latest
    input_mapping:
      terraform: terraform_gpdb
      pxf_tarball: pxf_tarball_ignore   # do not install from the artifact
    file: pxf_src/concourse/tasks/install_pxf_on_ccp.yml
    image: ccp-7-image
    params:
      GOOGLE_PROJECT_ID: ((ud/pxf/common/google-project-id))
      GP_VER: [[gp_ver]]
      IMPERSONATION: true
      INSTALL_GPHDFS: false
      KERBEROS: ((kerberos-enabled))
      PXF_JVM_OPTS: ((pxf-jvm-opts))
      PXF_VERSION: 5
  - task: upgrade_to_pxf_6
    input_mapping:
      terraform: terraform_gpdb
    file: pxf_src/concourse/tasks/upgrade_pxf_on_ccp.yml
    image: ccp-7-image
    params:
      GP_VER: [[gp_ver]]
      PXF_BASE_DIR: /home/gpadmin/pxf-boot
  - task: test_pxf-gp[[gp_ver]]-hdp2-secure-multi-impers_on_rhel7
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    file: pxf_src/concourse/tasks/test_pxf_on_ccp.yml
    attempts: 2
    params:
      GOOGLE_PROJECT_ID: ((ud/pxf/common/google-project-id))
      ACCESS_KEY_ID: ((tf-machine-access-key-id))
      SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
      HIVE_VERSION: 2
      IMPERSONATION: true
      KERBEROS: ((kerberos-enabled))
      GP_VER: [[gp_ver]]
      GROUP: security,proxySecurity,proxySecurityIpa,multiClusterSecurity
      PXF_BASE_DIR: /home/gpadmin/pxf-boot
  - task: test_pxf_cli
    on_success:
      in_parallel:
        steps:
        - *destroy_dataproc_1
        - *destroy_dataproc_2
        - *destroy_gpdb_cluster
        - *destroy_hadoop_cluster
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    file: pxf_src/concourse/tasks/test_pxf_cli.yml
{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}

{% if multinode_no_impersonation %}
- name: test_pxf-gp[[gp_ver]]-hdp2-secure-multi-no-impers_on_rhel7
  max_in_flight: 2
  plan:
  - in_parallel:
    - get: pxf_src
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
      trigger: true
    - get: pxf_tarball
      resource: pxf_gp[[gp_ver]]_tarball_rhel7
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb_package
      resource: gpdb[[gp_ver]]_rhel7_rpm_latest-0
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
    - get: gpdb[[gp_ver]]-pxf-dev-centos7-image
    - get: ccp_src
    - get: ccp-7-image
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-hdp2
  - in_parallel:
    - do:
      - put: terraform_gpdb
        resource: terraform
        params:
          action: create
          delete_on_failure: true
          generate_random_name: true
          terraform_source: ccp_src/google/
          vars:
            PLATFORM: centos7
            WITH_MIRRORS: false
            number_of_nodes: ((number_of_gpdb_nodes))
            extra_nodes: 1
            segments_per_host: 4
            instance_type: n1-standard-4
            ccp_reap_minutes: 120
            standby_master: false
      - task: generate_greenplum_cluster
        input_mapping:
          gpdb_rpm: gpdb_package
          terraform: terraform_gpdb
        file: ccp_src/ci/tasks/gen_cluster.yml
        image: ccp-7-image
        params:
          AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
          AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
          AWS_DEFAULT_REGION: ((ud/common/aws-region))
          BUCKET_PATH: ((tf-bucket-path))
          BUCKET_NAME: ((ud/pxf/common/tf-bucket-name))
          PLATFORM: centos7
          CLOUD_PROVIDER: google
          GPDB_RPM: true
      - in_parallel:
        - task: initialize_greenplum
          file: ccp_src/ci/tasks/gpinitsystem.yml
          params:
            POSTGRES_CONF_ADDONS:
            - wal_level=minimal
            - max_wal_senders=0
            - gp_dispatch_keepalives_idle=30
            - gp_dispatch_keepalives_interval=10
            - gp_dispatch_keepalives_count=4
        - task: install_hadoop
          file: pxf_src/concourse/tasks/install_hadoop.yml
          image: gpdb[[gp_ver]]-pxf-dev-centos7-image
          params:
            ACCESS_KEY_ID: ((tf-machine-access-key-id))
            SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
            IMPERSONATION: ((enable-impersonation-multinode))
    - task: generate_hadoop_cluster_1
      file: pxf_src/concourse/tasks/install_dataproc.yml
      params:
        GOOGLE_CREDENTIALS: ((ud/pxf/secrets/ccp-ci-service-account-key))
        GOOGLE_PROJECT_ID: ((ud/pxf/common/google-project-id))
        GOOGLE_ZONE: ((ud/pxf/common/google-zone))
        IMAGE_VERSION: ((dataproc-image-version))
        KERBEROS: ((kerberos-enabled))
        ccp_reap_minutes: 120
    - task: generate_hadoop_cluster_2
      file: pxf_src/concourse/tasks/install_dataproc.yml
      output_mapping:
        dataproc_env_files: dataproc_2_env_files
      params:
        GOOGLE_CREDENTIALS: ((ud/pxf/secrets/kerberos-ccp-ci-service-account-key))
        GOOGLE_PROJECT_ID: ((ud/pxf/common/kerberos-google-project-id))
        GOOGLE_ZONE: ((ud/pxf/common/kerberos-google-zone))
        HADOOP_USER: gpuser
        IMAGE_VERSION: ((dataproc-image-version))
        INITIALIZATION_SCRIPT: gs://data-gpdb-ud-kerberos-scripts/scripts/initialization-for-kerberos.sh
        INSTANCE_TAGS: bosh-network,data-gpdb-ud-access
        KERBEROS: ((kerberos-enabled))
        KEY: dataproc-kerberos-key
        KEYRING: dataproc-kerberos
        ccp_reap_minutes: 120
        NO_ADDRESS: false
        PROXY_USER: gpuser
        SECRETS_BUCKET: ((ud/pxf/secrets/kerberos-pxf-secrets-bucket-name))
  - task: setup_pxf
    input_mapping:
      terraform: terraform_gpdb
    file: pxf_src/concourse/tasks/install_pxf_on_ccp.yml
    image: ccp-7-image
    params:
      GOOGLE_PROJECT_ID: ((ud/pxf/common/google-project-id))
      IMPERSONATION: false
      INSTALL_GPHDFS: false
      GP_VER: [[gp_ver]]
      KERBEROS: ((kerberos-enabled))
      PXF_JVM_OPTS: ((pxf-jvm-opts))
  - task: test_pxf-gp[[gp_ver]]-hdp2-secure-multi-no-impers_on_rhel7
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    file: pxf_src/concourse/tasks/test_pxf_on_ccp.yml
    attempts: 2
    params:
      GOOGLE_PROJECT_ID: ((ud/pxf/common/google-project-id))
      ACCESS_KEY_ID: ((tf-machine-access-key-id))
      SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
      HIVE_VERSION: 2
      IMPERSONATION: false
      KERBEROS: ((kerberos-enabled))
      GP_VER: [[gp_ver]]
      GROUP: security,multiClusterSecurity
      PXF_JVM_OPTS: ((pxf-jvm-opts))
  - task: test_pxf_cli
    on_success:
      in_parallel:
        steps:
        - *destroy_dataproc_1
        - *destroy_dataproc_2
        - *destroy_gpdb_cluster
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    file: pxf_src/concourse/tasks/test_pxf_cli.yml

{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}

## ---------- Multi-node test for GP7 ----------
{% if gp7_multinode %}
{% set gp_ver = 7 %}
{% set passed = '[build_pxf-gp7_on_rocky8]' %}
{% include 'jobs/multinode-tpl.yml'%}
{% set passed = None %}
{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}{# if gp7_multinode ends here #}
{% set gp_ver = None %}
