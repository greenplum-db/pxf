---
# yamllint disable rule:empty-lines

{# import macros to use in this template #}
{% import "macros/macros.j2" as macros %}

{#
# ======================================================================
# BUILD and TEST Combinations for PXF
# ======================================================================

# gp_ver     : major Greenplum version
# build_os   : the name of the OS used to build PXF artifacts
# test_os    : the name of the OS used to test  PXF artifacts
# os_ver     : the version of the OS
# test_fdw   : whether to test PXF FDW extension in this configuration
# test_cloud : whether to test PXF against cloud external systems
#
# when iterating over the entries, use the following pattern:
# {% call(x) macros.for_each_config(build_test_pxf_combinations) %}
#     <do whatever rendering you need for a combination, can use {% include '.../some-template.yml' %} >
# {% endcall %}
#}

{% set build_test_pxf_combinations = [
    {'gp_ver': '5', 'build_os': 'centos', 'test_os': 'centos', 'os_ver': '7',     'test_fdw': false, 'test_cloud': false},
    {'gp_ver': '6', 'build_os': 'centos', 'test_os': 'centos', 'os_ver': '7',     'test_fdw': false, 'test_cloud': true },
    {'gp_ver': '6', 'build_os': 'rocky' , 'test_os': 'rocky' , 'os_ver': '8',     'test_fdw': true , 'test_cloud': false},
    {'gp_ver': '6', 'build_os': 'rocky' , 'test_os': 'rocky' , 'os_ver': '9',     'test_fdw': false, 'test_cloud': false},
    {'gp_ver': '6', 'build_os': 'centos', 'test_os': 'oel'   , 'os_ver': '7',     'test_fdw': false, 'test_cloud': false},
    {'gp_ver': '6', 'build_os': 'ubuntu', 'test_os': 'ubuntu', 'os_ver': '18.04', 'test_fdw': false, 'test_cloud': false},
    {'gp_ver': '7', 'build_os': 'rocky' , 'test_os': 'rocky' , 'os_ver': '8',     'test_fdw': true , 'test_cloud': false},
    {'gp_ver': '7', 'build_os': 'rocky' , 'test_os': 'rocky' , 'os_ver': '9',     'test_fdw': false, 'test_cloud': false}] %}

{# define supported clouds and whether their testing is requested by the Makefile via context variables #}
{% set clouds = {'s3': s3, 'gs': gs, 'adl': adl, 'wasbs': wasbs, 'minio': minio} %}

## ======================================================================
## ANCHORS
## ======================================================================
anchors:
  [[macros.anchor_destroy_dataproc(1)]]
  [[macros.anchor_destroy_dataproc(2)]]
  [[macros.anchor_destroy_cluster('gpdb')]]
  [[macros.anchor_destroy_cluster('hadoop')]]
  [[macros.anchor_slack_notification(slack_notification)]]

## ======================================================================
## RESOURCE TYPES
## ======================================================================
resource_types:

{% if multinode or multinode_no_impersonation or file or gp7_cli or gp7_multinode %}
    [[macros.registry_image('terraform', 'gcr.io/data-gpdb-ud/terraform-resource', '0.11.15')]]
{% endif %}

{% if multinode or gp7_multinode %}
    [[macros.registry_image('terraform-0.14.10', 'ljfranklin/terraform-resource', '0.14.10')]]
{% endif %}

[[macros.registry_image('gcs', 'frodenas/gcs-resource', '')]]

{% if slack_notification %}
    [[macros.registry_image('slack-notification', 'cfcommunity/slack-notification-resource', 'latest')]]
{% endif %}

## ======================================================================
## RESOURCES
## ======================================================================
resources:
  [[macros.resource_pxf_dependencies('build')]]
  [[macros.resource_pxf_dependencies('automation')]]

  [[macros.resource_singlecluster('hdp2')]]

{% if hdp3 %}
  [[macros.resource_singlecluster('hdp3')]]
{% endif %}

{% if cdh %}
  [[macros.resource_singlecluster('cdh')]]
{% endif %}

## ---------- Github Repos ----------
  [[macros.resource_github_repo('pxf')]]

{% if multinode or multinode_no_impersonation or file or gp7_cli or gp7_multinode %}
  [[macros.resource_github_repo('ccp')]]
{% endif %}

## ---------- Docker Images ----------
{% call(x) macros.for_each_config(build_test_pxf_combinations) %}
    {% include 'resources/pxf-test-image-tpl.yml' %}
{% endcall %}

{% if multinode or multinode_no_impersonation or file or gp7_cli or gp7_multinode %}
  [[macros.registry_image('ccp-7-image', 'gcr.io/data-gpdb-public-images/ccp', 'latest')]]
{% endif %}

## ---------- Slack Notification ----------
  [[macros.resource_slack_notification('ud-pipeline-bot-' ~ user ~ '-webhook')]]

## ---------- Greenplum Packages ----------
{% call(x) macros.for_each_config(build_test_pxf_combinations) %}
    {% if x.os_ver == '9' %}
        {# define RPMs for rocky9 until they are released into standard locations #}
        {% include 'resources/greenplum-rocky9-package-tpl.yml' %}
    {% else %}
        {% include 'resources/greenplum-package-tpl.yml' %}
    {% endif %}
{% endcall %}

## ---------- PXF Artifacts ----------
{% call(x) macros.for_each_config(build_test_pxf_combinations) %}
    {% include 'resources/pxf-artifact-tpl.yml' %}
{% endcall %}

## ---------- PXF 5 Artifact ---------------
{% if multinode %}
- name: pxf5-gp6-rhel7-released
  type: gcs
  source:
    bucket: ((ud/pxf/prod/releng-drop-bucket-name))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: ((ud/pxf/common/releng-drop-path))/gpdb6/pxf-gp6-5.(.*)-2.el7.x86_64.rpm
{% endif %}

## ---------- Auxiliary Resources ----------
{% if multinode or multinode_no_impersonation or file or gp7_cli or gp7_multinode %}
- name: terraform
  type: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
      GOOGLE_CREDENTIALS: ((ud/pxf/secrets/ccp-ci-service-account-key))
    vars:
      project_id: ((ud/pxf/common/google-project-id))
    storage:
      access_key_id: ((tf-machine-access-key-id))
      secret_access_key: ((tf-machine-secret-access-key))
      region_name: ((ud/common/aws-region))
      bucket: ((ud/pxf/common/tf-bucket-name))
      bucket_path: ((tf-bucket-path))
{% endif %}

{% if multinode or gp7_multinode %}
- name: terraform-ipa-hadoop
  type: terraform-0.14.10
  source:
    env:
      GOOGLE_CREDENTIALS: ((ud/pxf/secrets/ipa-ccp-ci-service-account-key))
    delete_on_failure: true
    storage:
      bucket: ((ud/pxf/common/tf-bucket-name))
      bucket_path: ((ud/pxf/common/tf-bucket-path-hadoop))
      region_name: ((ud/common/aws-region))
      access_key_id: ((tf-machine-access-key-id))
      secret_access_key: ((tf-machine-secret-access-key))
{% endif %}

## ======================================================================
## JOBS
## ======================================================================
jobs:

## ---------- Build and Basic Singlenode Test Swimlanes ----------

{# include a build job for all OS other than OEL (which does not have a separate build job) #}
{% call(x) macros.for_each_config(build_test_pxf_combinations) %}
    {% if x.test_os != 'oel' %}
        {% include 'jobs/build-tpl.yml' %}
    {% endif %}
{% endcall %}

{# include a non-FDW test job for all OS other than OEL (unless requested in the Makefile) #}
{% call(x) macros.for_each_config(build_test_pxf_combinations) %}
    {% if x.test_os != 'oel' or oel7 %}
        {% do x.update({'use_fdw': 'false'}) %}
        {% include 'jobs/test-tpl.yml' %}
    {% endif %}
{% endcall %}

{# include an FDW test job if supported by the swimlane #}
{% call(x) macros.for_each_config(build_test_pxf_combinations) %}
    {% if x.test_fdw is sameas true %}
        {% do x.update({'use_fdw': 'true'}) %}
        {% include 'jobs/test-tpl.yml' %}
    {% endif %}
{% endcall %}

## ---------- HCFS Cloud tests ----------
{# include a non-FDW test job for all clouds if supported and requested in the Makefile #}
{% call(x) macros.for_each_config(build_test_pxf_combinations) %}
    {% if x.test_cloud is sameas true %}
        {# iterate over possible clouds, include a test job if a given cloud requested in the Makefile #}
        {% for cloud, test_requested in clouds.items() %}
            {% if test_requested %}
                {% do x.update({'use_fdw': 'false'}) %}
                {% do x.update({'use_impers': 'false'}) %}
                {% do x.update({'protocol': cloud}) %}
                {% include 'jobs/test-hcfs-tpl.yml' %}
                {# for S3 only, also include an impersonation job #}
                {% if x.protocol == 's3' %}
                    {% do x.update({'use_impers': 'true'}) %}
                    {% include 'jobs/test-hcfs-tpl.yml' %}
                {% endif %}
            {% endif %}
        {% endfor %}
    {% endif %}
{% endcall %}

## ---------- GP7 PXF CLI tests ----------

{% if gp7_cli %}
    {% set gp_ver = 7 %}
    {% set passed = '[build-pxf-gp7-rocky8]' %}
    {% include 'jobs/test-cli-tpl.yml' %}
    {% set passed = None %}
{% endif %} {# if gp7_cli ends here #}
{% set gp_ver = None %}

## ---------- Extended Tests ----------
{% set gp_ver = 6 %}
{% if hdp2 %}
- name: test-pxf-gp[[gp_ver]]-ext-hdp2-no-impers-centos7
  plan:
  - in_parallel:
    - get: pxf_src
      resource: pxf-src
      passed: [build_pxf-gp[[gp_ver]]_on_centos7]
      trigger: true
    - get: pxf_tarball
      resource: pxf-gp[[gp_ver]]-tarball-el7
      passed: [build-pxf-gp[[gp_ver]]-centos7]
    - get: gpdb_package
      resource: gpdb[[gp_ver]]-el7-rpm-latest-0
      passed: [build_pxf-gp[[gp_ver]]-centos7]
    - get: gpdb[[gp_ver]]-pxf-dev-centos7-image
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-hdp2
  - task: test-pxf-gp[[gp_ver]]-ext-hdp2-no-impers-centos7
    file: pxf_src/concourse/tasks/test.yml
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    params:
      GP_VER: [[gp_ver]]
      IMPERSONATION: false
{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}

{% if hdp3 %}
- name: test-pxf-gp[[gp_ver]]-ext-hdp3-centos7
  plan:
  - in_parallel:
    - get: pxf_src
      resource: pxf-src
      passed: [build-pxf-gp[[gp_ver]]-centos7]
      trigger: true
    - get: pxf_tarball
      resource: pxf-gp[[gp_ver]]-tarball-el7
      passed: [build-pxf-gp[[gp_ver]]-centos7]
    - get: gpdb_package
      resource: gpdb[[gp_ver]]-el7-rpm-latest-0
      passed: [build-pxf-gp[[gp_ver]]-centos7]
    - get: gpdb[[gp_ver]]-pxf-dev-centos7-image
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-hdp3
  - task: test-pxf-gp[[gp_ver]]-ext-hdp3-centos7
    file: pxf_src/concourse/tasks/test.yml
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    params:
      ACCESS_KEY_ID: ((tf-machine-access-key-id))
      GP_VER: [[gp_ver]]
      GROUP: gpdb,proxy,profile
      SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}

{% if jdk11 %}
- name: test-pxf-gp[[gp_ver]]-ext-hdp2-jdk11-centos7
  plan:
  - in_parallel:
    - get: pxf_src
      resource: pxf-src
      passed: [build-pxf-gp[[gp_ver]]-centos7]
      trigger: true
    - get: pxf_tarball
      resource: pxf-gp[[gp_ver]]-tarball-el7
      passed: [build-pxf-gp[[gp_ver]]-centos7]
    - get: gpdb_package
      resource: gpdb[[gp_ver]]-el7-rpm-latest-0
      passed: [build-pxf-gp[[gp_ver]]-centos7]
    - get: gpdb[[gp_ver]]-pxf-dev-centos7-image
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-hdp2
  - task: test-pxf-gp[[gp_ver]]-ext-hdp2-jdk11-centos7
    file: pxf_src/concourse/tasks/test.yml
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    params:
      ACCESS_KEY_ID: ((tf-machine-access-key-id))
      GP_VER: [[gp_ver]]
      GROUP: gpdb,proxy,profile
      RUN_JDK_VERSION: 11
      SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}

{% if cdh %}
- name: test-pxf-gp[[gp_ver]]-ext-cdh-centos7
  plan:
  - in_parallel:
    - get: pxf_src
      resource: pxf-src
      passed: [build-pxf-gp[[gp_ver]]-centos7]
      trigger: true
    - get: pxf_tarball
      resource: pxf-gp[[gp_ver]]-tarball-el7
      passed: [build-pxf-gp[[gp_ver]]-centos7]
    - get: gpdb_package
      resource: gpdb[[gp_ver]]-el7-rpm-latest-0
      passed: [build-pxf-gp[[gp_ver]]-centos7]
    - get: gpdb[[gp_ver]]-pxf-dev-centos7-image
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-cdh
  - task: test-pxf-gp[[gp_ver]]-ext-cdh-centos7
    file: pxf_src/concourse/tasks/test.yml
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    # CDH often fails on HBASE permission grant
    attempts: 3
    params:
      ACCESS_KEY_ID: ((tf-machine-access-key-id))
      GP_VER: [[gp_ver]]
      GROUP: gpdb,proxy,profile
      HADOOP_CLIENT: CDH
      SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}

## ---------- FILE tests -----------------

{% if file %}
- name: test-pxf-gp[[gp_ver]]-file-no-impers-centos7
  max_in_flight: 2
  plan:
  - in_parallel:
    - get: pxf_src
      resource: pxf-src
      passed: [build-pxf-gp[[gp_ver]]-centos7]
      trigger: true
    - get: pxf_tarball
      resource: pxf-gp[[gp_ver]]-tarball-el7
      passed: [build-pxf-gp[[gp_ver]]-centos7]
    - get: gpdb_package
      resource: gpdb[[gp_ver]]-el7-rpm-latest-0
      passed: [build-pxf-gp[[gp_ver]]-centos7]
    - get: gpdb[[gp_ver]]-pxf-dev-centos7-image
    - get: ccp_src
      resource: ccp-src
    - get: ccp-7-image
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-hdp2
  - put: terraform-gpdb
    resource: terraform
    params:
      action: create
      delete_on_failure: true
      generate_random_name: true
      terraform_source: ccp_src/google/
      vars:
        PLATFORM: centos7
        number_of_nodes: ((number_of_gpdb_nodes))
        segments_per_host: 4
        instance_type: n1-standard-4
        ccp_reap_minutes: 60
  - task: generate-greenplum-cluster
    input_mapping:
      gpdb_rpm: gpdb_package
      terraform: terraform-gpdb
    file: ccp_src/ci/tasks/gen_cluster.yml
    image: ccp-7-image
    params:
      AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
      AWS_DEFAULT_REGION: ((ud/common/aws-region))
      BUCKET_PATH: ((tf-bucket-path))
      BUCKET_NAME: ((ud/pxf/common/tf-bucket-name))
      PLATFORM: centos7
      CLOUD_PROVIDER: google
      GPDB_RPM: true
  - task: initialize-greenplum
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-nfs
    input_mapping:
      terraform: terraform-gpdb
    file: pxf_src/concourse/tasks/install_nfs_on_ccp.yml
    image: ccp-7-image
    params:
      BASE_PATH: /mnt/nfs/var/nfsshare
  - task: setup-pxf
    input_mapping:
      terraform: terraform-gpdb
    file: pxf_src/concourse/tasks/install_pxf_on_ccp.yml
    image: ccp-7-image
    params:
      GOOGLE_PROJECT_ID: ((ud/pxf/common/google-project-id))
      GP_VER: [[gp_ver]]
      IMPERSONATION: true
      INSTALL_GPHDFS: false
      PXF_JVM_OPTS: ((pxf-jvm-opts))
      SKIP_HADOOP_SETUP: true
  - task: test-pxf-gp[[gp_ver]]-ext-file-no-impers-centos7
    on_success:
      do:
      - put: terraform-gpdb
        resource: terraform
        params:
          action: destroy
          env_name_file: terraform_gpdb/name
          terraform_source: ccp_src/google/
        get_params:
          action: destroy
    privileged: true
    file: pxf_src/concourse/tasks/test_pxf_on_ccp.yml
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    params:
      GOOGLE_PROJECT_ID: ((ud/pxf/common/google-project-id))
      BASE_PATH: /mnt/nfs/var/nfsshare
      GP_VER: [[gp_ver]]
      GROUP: hcfs
      IMPERSONATION: false
      PROTOCOL: file
{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}


## ---------- Multi-node tests ----------
{% if multinode %}
- name: test_pxf-gp[[gp_ver]]-ext-hdp2-secure-multi-impers-centos7
  max_in_flight: 2
  plan:
  - in_parallel:
    - get: pxf_src
      resource: pxf-src
      passed: [build-pxf-gp[[gp_ver]]-centos7]
      trigger: true
    - get: pxf_artifact
      resource: pxf5-gp6-rhel7-released   # for upgrade test
    - get: pxf_tarball
      resource: pxf-gp[[gp_ver]]-tarball-el7
      passed: [build-pxf-gp[[gp_ver]]-centos7]
    - get: gpdb_package
      resource: gpdb[[gp_ver]]-el7-rpm-latest-0
      passed: [build-pxf-gp[[gp_ver]]-centos7]
    - get: gpdb[[gp_ver]]-pxf-dev-centos7-image
    - get: ccp_src
      resource: ccp-src
    - get: ccp-7-image
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-hdp2
  - in_parallel:
    - do:
      - put: terraform-gpdb
        resource: terraform
        params:
          action: create
          delete_on_failure: true
          generate_random_name: true
          terraform_source: ccp_src/google/
          vars:
            PLATFORM: centos7
            number_of_nodes: ((number_of_gpdb_nodes))
            extra_nodes: 1
            segments_per_host: 4
            instance_type: n1-standard-4
            ccp_reap_minutes: 120
            standby_master: true
      - task: generate-greenplum-cluster
        input_mapping:
          gpdb_rpm: gpdb_package
          terraform: terraform-gpdb
        file: ccp_src/ci/tasks/gen_cluster.yml
        image: ccp-7-image
        params:
          AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
          AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
          AWS_DEFAULT_REGION: ((ud/common/aws-region))
          BUCKET_PATH: ((tf-bucket-path))
          BUCKET_NAME: ((ud/pxf/common/tf-bucket-name))
          PLATFORM: centos7
          CLOUD_PROVIDER: google
          GPDB_RPM: true
      - in_parallel:
        - task: initialize-greenplum
          file: ccp_src/ci/tasks/gpinitsystem.yml
        - task: install-hadoop
          file: pxf_src/concourse/tasks/install_hadoop.yml
          image: gpdb[[gp_ver]]-pxf-dev-centos7-image
          params:
            ACCESS_KEY_ID: ((tf-machine-access-key-id))
            SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
            IMPERSONATION: ((enable-impersonation-multinode))
    - task: generate-hadoop-cluster-1
      file: pxf_src/concourse/tasks/install_dataproc.yml
      params:
        GOOGLE_CREDENTIALS: ((ud/pxf/secrets/ccp-ci-service-account-key))
        GOOGLE_PROJECT_ID: ((ud/pxf/common/google-project-id))
        GOOGLE_ZONE: ((ud/pxf/common/google-zone))
        IMAGE_VERSION: ((dataproc-image-version))
        KERBEROS: ((kerberos-enabled))
        ccp_reap_minutes: 120
    - task: generate-hadoop-cluster-2
      file: pxf_src/concourse/tasks/install_dataproc.yml
      output_mapping:
        dataproc_env_files: dataproc_2_env_files
      params:
        GOOGLE_CREDENTIALS: ((ud/pxf/secrets/kerberos-ccp-ci-service-account-key))
        GOOGLE_PROJECT_ID: ((ud/pxf/common/kerberos-google-project-id))
        GOOGLE_ZONE: ((ud/pxf/common/kerberos-google-zone))
        HADOOP_USER: gpuser
        IMAGE_VERSION: ((dataproc-image-version))
        INITIALIZATION_SCRIPT: gs://data-gpdb-ud-kerberos-scripts/scripts/initialization-for-kerberos.sh
        INSTANCE_TAGS: bosh-network,data-gpdb-ud-access
        KERBEROS: ((kerberos-enabled))
        KEY: dataproc-kerberos-key
        KEYRING: dataproc-kerberos
        ccp_reap_minutes: 120
        NO_ADDRESS: false
        PROXY_USER: gpuser
        SECRETS_BUCKET: ((ud/pxf/secrets/kerberos-pxf-secrets-bucket-name))
    - do:   # Generate IPA Hadoop cluster
      - put: terraform-ipa-hadoop
        params:
          action: create
          generate_random_name: true
          terraform_source: pxf_src/concourse/terraform/ipa-multinode-hadoop
          vars:
            gcp_project: ((ud/pxf/common/ipa-google-project-id))
      - task: generate-multinode-hadoop-cluster
        file: pxf_src/concourse/tasks/install_multinode_hadoop.yml
        image: gpdb[[gp_ver]]-pxf-dev-centos7-image
        input_mapping:
          terraform_ipa_hadoop: terraform-ipa-hadoop
        params:
          ANSIBLE_VAR_gcp_storage_bucket: ((ud/pxf/common/build-resources-bucket-name))
          ANSIBLE_VAR_ipa_password: ((ud/pxf/secrets/ipa-password))
          ANSIBLE_VAR_ssl_store_password: ((ud/pxf/secrets/ssl-store-password))
  - task: setup-pxf-5-latest
    input_mapping:
      terraform: terraform-gpdb
      pxf_tarball: pxf_tarball_ignore   # do not install from the artifact
    file: pxf_src/concourse/tasks/install_pxf_on_ccp.yml
    image: ccp-7-image
    params:
      GOOGLE_PROJECT_ID: ((ud/pxf/common/google-project-id))
      GP_VER: [[gp_ver]]
      IMPERSONATION: true
      INSTALL_GPHDFS: false
      KERBEROS: ((kerberos-enabled))
      PXF_JVM_OPTS: ((pxf-jvm-opts))
      PXF_VERSION: 5
  - task: upgrade-to-pxf-6
    input_mapping:
      terraform: terraform-gpdb
    file: pxf_src/concourse/tasks/upgrade_pxf_on_ccp.yml
    image: ccp-7-image
    params:
      GP_VER: [[gp_ver]]
      PXF_BASE_DIR: /home/gpadmin/pxf-boot
  - task: test-pxf-gp[[gp_ver]]-ext-hdp2-secure-multi-impers-centos7
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    file: pxf_src/concourse/tasks/test_pxf_on_ccp.yml
    attempts: 2
    params:
      GOOGLE_PROJECT_ID: ((ud/pxf/common/google-project-id))
      ACCESS_KEY_ID: ((tf-machine-access-key-id))
      SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
      HIVE_VERSION: 2
      IMPERSONATION: true
      KERBEROS: ((kerberos-enabled))
      GP_VER: [[gp_ver]]
      GROUP: security,proxySecurity,proxySecurityIpa,multiClusterSecurity
      PXF_BASE_DIR: /home/gpadmin/pxf-boot
  - task: test-pxf-cli
    on_success:
      in_parallel:
        steps:
        - *destroy_dataproc_1
        - *destroy_dataproc_2
        - *destroy_gpdb_cluster
        - *destroy_hadoop_cluster
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    file: pxf_src/concourse/tasks/test_pxf_cli.yml
{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}

{% if multinode_no_impersonation %}
- name: test-pxf-gp[[gp_ver]]-ext-hdp2-secure-multi-no-impers-centos7
  max_in_flight: 2
  plan:
  - in_parallel:
    - get: pxf_src
      resource: pxf-src
      passed: [build-pxf-gp[[gp_ver]]-centos7]
      trigger: true
    - get: pxf_tarball
      resource: pxf-gp[[gp_ver]]-tarball-el7
      passed: [build-pxf-gp[[gp_ver]]-centos7]
    - get: gpdb_package
      resource: gpdb[[gp_ver]]-el7-rpm-latest-0
      passed: [build-pxf-gp[[gp_ver]]-centos7]
    - get: gpdb[[gp_ver]]-pxf-dev-centos7-image
    - get: ccp_src
      resource: ccp-src
    - get: ccp-7-image
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-hdp2
  - in_parallel:
    - do:
      - put: terraform-gpdb
        resource: terraform
        params:
          action: create
          delete_on_failure: true
          generate_random_name: true
          terraform_source: ccp_src/google/
          vars:
            PLATFORM: centos7
            WITH_MIRRORS: false
            number_of_nodes: ((number_of_gpdb_nodes))
            extra_nodes: 1
            segments_per_host: 4
            instance_type: n1-standard-4
            ccp_reap_minutes: 120
            standby_master: false
      - task: generate-greenplum-cluster
        input_mapping:
          gpdb_rpm: gpdb_package
          terraform: terraform-gpdb
        file: ccp_src/ci/tasks/gen_cluster.yml
        image: ccp-7-image
        params:
          AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
          AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
          AWS_DEFAULT_REGION: ((ud/common/aws-region))
          BUCKET_PATH: ((tf-bucket-path))
          BUCKET_NAME: ((ud/pxf/common/tf-bucket-name))
          PLATFORM: centos7
          CLOUD_PROVIDER: google
          GPDB_RPM: true
      - in_parallel:
        - task: initialize-greenplum
          file: ccp_src/ci/tasks/gpinitsystem.yml
          params:
            POSTGRES_CONF_ADDONS:
            - wal_level=minimal
            - max_wal_senders=0
            - gp_dispatch_keepalives_idle=30
            - gp_dispatch_keepalives_interval=10
            - gp_dispatch_keepalives_count=4
        - task: install-hadoop
          file: pxf_src/concourse/tasks/install_hadoop.yml
          image: gpdb[[gp_ver]]-pxf-dev-centos7-image
          params:
            ACCESS_KEY_ID: ((tf-machine-access-key-id))
            SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
            IMPERSONATION: ((enable-impersonation-multinode))
    - task: generate-hadoop-cluster-1
      file: pxf_src/concourse/tasks/install_dataproc.yml
      params:
        GOOGLE_CREDENTIALS: ((ud/pxf/secrets/ccp-ci-service-account-key))
        GOOGLE_PROJECT_ID: ((ud/pxf/common/google-project-id))
        GOOGLE_ZONE: ((ud/pxf/common/google-zone))
        IMAGE_VERSION: ((dataproc-image-version))
        KERBEROS: ((kerberos-enabled))
        ccp_reap_minutes: 120
    - task: generate-hadoop-cluster-2
      file: pxf_src/concourse/tasks/install_dataproc.yml
      output_mapping:
        dataproc_env_files: dataproc_2_env_files
      params:
        GOOGLE_CREDENTIALS: ((ud/pxf/secrets/kerberos-ccp-ci-service-account-key))
        GOOGLE_PROJECT_ID: ((ud/pxf/common/kerberos-google-project-id))
        GOOGLE_ZONE: ((ud/pxf/common/kerberos-google-zone))
        HADOOP_USER: gpuser
        IMAGE_VERSION: ((dataproc-image-version))
        INITIALIZATION_SCRIPT: gs://data-gpdb-ud-kerberos-scripts/scripts/initialization-for-kerberos.sh
        INSTANCE_TAGS: bosh-network,data-gpdb-ud-access
        KERBEROS: ((kerberos-enabled))
        KEY: dataproc-kerberos-key
        KEYRING: dataproc-kerberos
        ccp_reap_minutes: 120
        NO_ADDRESS: false
        PROXY_USER: gpuser
        SECRETS_BUCKET: ((ud/pxf/secrets/kerberos-pxf-secrets-bucket-name))
  - task: setup-pxf
    input_mapping:
      terraform: terraform-gpdb
    file: pxf_src/concourse/tasks/install_pxf_on_ccp.yml
    image: ccp-7-image
    params:
      GOOGLE_PROJECT_ID: ((ud/pxf/common/google-project-id))
      IMPERSONATION: false
      INSTALL_GPHDFS: false
      GP_VER: [[gp_ver]]
      KERBEROS: ((kerberos-enabled))
      PXF_JVM_OPTS: ((pxf-jvm-opts))
  - task: test-pxf-gp[[gp_ver]]-ext-hdp2-secure-multi-no-impers-centos7
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    file: pxf_src/concourse/tasks/test_pxf_on_ccp.yml
    attempts: 2
    params:
      GOOGLE_PROJECT_ID: ((ud/pxf/common/google-project-id))
      ACCESS_KEY_ID: ((tf-machine-access-key-id))
      SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
      HIVE_VERSION: 2
      IMPERSONATION: false
      KERBEROS: ((kerberos-enabled))
      GP_VER: [[gp_ver]]
      GROUP: security,multiClusterSecurity
      PXF_JVM_OPTS: ((pxf-jvm-opts))
  - task: test-pxf-cli
    on_success:
      in_parallel:
        steps:
        - *destroy_dataproc_1
        - *destroy_dataproc_2
        - *destroy_gpdb_cluster
    image: gpdb[[gp_ver]]-pxf-dev-centos7-image
    file: pxf_src/concourse/tasks/test_pxf_cli.yml
{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}

## ---------- Multi-node test for GP7 ----------
{% if gp7_multinode %}
    {% set gp_ver = 7 %}
    {% set passed = '[build-pxf-gp7-rocky8]' %}
    {% include 'jobs/test-multinode-tpl.yml'%}
{% if slack_notification %}
    <<: *slack_alert
{% endif %}
{% endif %}
{% set gp_ver = None %}
