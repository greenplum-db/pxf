---
# yamllint disable rule:empty-lines

{# import macros to use in this template #}
{% import "macros/macros.j2" as macros %}

{#
# ======================================================================
# BUILD and TEST Combinations for PXF
# ======================================================================

# gp_ver     : major Greenplum version
# build_os   : the name of the OS used to build PXF artifacts
# test_os    : the name of the OS used to test  PXF artifacts
# os_ver     : the version of the OS
# test_fdw   : whether to test PXF FDW extension in this configuration
# test_cloud : whether to test PXF against cloud external systems
#
# when iterating over the entries, use the following pattern:
# {% call(x) macros.for_each_config(build_test_pxf_combinations) %}
#     <do whatever rendering you need for a combination, can use {% include '.../some-template.yml' %} >
# {% endcall %}
#}

{% set build_test_pxf_combinations = [
    {'gp_ver': '5', 'build_os': 'centos', 'test_os': 'centos', 'os_ver': '7',     'test_fdw': false, 'test_cloud': false},
    {'gp_ver': '6', 'build_os': 'centos', 'test_os': 'centos', 'os_ver': '7',     'test_fdw': false, 'test_cloud': true },
    {'gp_ver': '6', 'build_os': 'rocky' , 'test_os': 'rocky' , 'os_ver': '8',     'test_fdw': true , 'test_cloud': false},
    {'gp_ver': '6', 'build_os': 'rocky' , 'test_os': 'rocky' , 'os_ver': '9',     'test_fdw': false, 'test_cloud': false},
    {'gp_ver': '6', 'build_os': 'centos', 'test_os': 'oel'   , 'os_ver': '7',     'test_fdw': false, 'test_cloud': false},
    {'gp_ver': '6', 'build_os': 'ubuntu', 'test_os': 'ubuntu', 'os_ver': '18.04', 'test_fdw': false, 'test_cloud': false},
    {'gp_ver': '7', 'build_os': 'rocky' , 'test_os': 'rocky' , 'os_ver': '8',     'test_fdw': true , 'test_cloud': false},
    {'gp_ver': '7', 'build_os': 'rocky' , 'test_os': 'rocky' , 'os_ver': '9',     'test_fdw': false, 'test_cloud': false}] %}

{# define supported clouds and whether their testing is requested by the Makefile via context variables #}
{% set clouds = {'s3': s3, 'gs': gs, 'adl': adl, 'wasbs': wasbs, 'minio': minio} %}

{# change num_gpdb5_versions & num_gpdb6_versions in Makefile to download/test more Greenplum versions #}
{# number of backwards compatibility tasks that can run at once #}
{% set max_concurrent_bc_tasks = 3 %}
## ======================================================================
## GROUPS
## ======================================================================
groups:
- name: all
  jobs:
  - testing_gate_for_pxf-gp
{% set gp_ver = None %}
{% for gp_ver in range(5, 7) %}
  - build_pxf-gp[[gp_ver]]_on_rhel7
  - test_pxf-gp[[gp_ver]]-hdp2_on_rhel7
{% endfor %}
{% set gp_ver = 6 %}
  - test_pxf-gp[[gp_ver]]-hdp2_on_oel7
  - build_pxf-gp[[gp_ver]]_on_ubuntu18
  - test_pxf-gp[[gp_ver]]-hdp2_on_ubuntu18
{% for gp_ver in range(6, 8) %}
  - build_pxf-gp[[gp_ver]]_on_rhel8
  - test_pxf-gp[[gp_ver]]-hdp2_on_rhel8
{% endfor %}
{% set gp_ver = None %}
{% for gp_ver in range(5, 7) %}
  - test_pxf-gp[[gp_ver]]_backward_compatibility_on_rhel7
{% endfor %}
{% set gp_ver = 7 %}
  - test_pxf-gp[[gp_ver]]_backward_compatibility_on_rhel8
{% set gp_ver = None %}
{% set gp_ver = 6 %}
  - test_pxf-gp[[gp_ver]]_backward_compatibility_on_ubuntu18
  - test_pxf-gp[[gp_ver]]_backward_compatibility_on_rhel8
  - test_pxf-gp[[gp_ver]]-hdp2-no-impers_on_rhel7
  - test_pxf-gp[[gp_ver]]-hdp3_on_rhel7
  - test_pxf-gp[[gp_ver]]-hdp3-secure_ambari_manual_on_rhel7
  - test_pxf-gp[[gp_ver]]-hdp2-jdk11_on_rhel7
  - test_pxf-gp[[gp_ver]]-cdh_on_rhel7
  - test_pxf-gp[[gp_ver]]-file-no-impers_on_rhel7
  - test_pxf-gp[[gp_ver]]-s3_on_rhel7
  - test_pxf-gp[[gp_ver]]-s3-no-impers_on_rhel7
  - test_pxf-gp[[gp_ver]]-adl-no-impers_on_rhel7
  - test_pxf-gp[[gp_ver]]-gs-no-impers_on_rhel7
  - test_pxf-gp[[gp_ver]]-minio-no-impers_on_rhel7
  - test_pxf-gp[[gp_ver]]-hdp2-secure-multi-impers_on_rhel7
  - test_pxf-gp[[gp_ver]]-hdp2-secure-multi-no-impers_on_rhel7
  - test_pxf-gp[[gp_ver]]-hdp2-upgrade-extension_on_rhel7
{% set gp_ver = None %}
{% set gp_ver = 7 %}
  - test_pxf-gp[[gp_ver]]-hdp2-secure-multi-impers_on_rhel8
  - test_pxf-gp[[gp_ver]]-cli_on_rhel8
{% set gp_ver = None %}
  - compatibility_gate_for_pxf-gp
  - promote_pxf_for_gp5_gp6_gp7_artifacts
  - publish_pxf-gp5_gp6_gp7_artifacts_to_gp-releng

{% set gp_ver = None %}
{% for gp_ver in range(5, 7) %}
- name: gp[[gp_ver]]_on_rhel7
  jobs:
  - build_pxf-gp[[gp_ver]]_on_rhel7
  - test_pxf-gp[[gp_ver]]-hdp2_on_rhel7
{% endfor %}
- name: gp6_on_oel7
  jobs:
  - build_pxf-gp6_on_rhel7
  - test_pxf-gp6-hdp2_on_oel7
{% set gp_ver = 6 %}
- name: gp[[gp_ver]]_on_ubuntu18
  jobs:
  - test_pxf-gp[[gp_ver]]-hdp2_on_ubuntu18
  - build_pxf-gp[[gp_ver]]_on_ubuntu18
{% set gp_ver = None %}
{% for gp_ver in range(6, 8) %}
- name: gp[[gp_ver]]_on_rhel8
  jobs:
  - test_pxf-gp[[gp_ver]]-hdp2_on_rhel8
  - build_pxf-gp[[gp_ver]]_on_rhel8
{% endfor %}
{% set gp_ver = None %}
{% set gp_ver = 6 %}
- name: pxf_test-gp[[gp_ver]]_on_rhel7
  jobs:
  - test_pxf-gp[[gp_ver]]-hdp2-no-impers_on_rhel7
  - test_pxf-gp[[gp_ver]]-hdp3_on_rhel7
  - test_pxf-gp[[gp_ver]]-hdp3-secure_ambari_manual_on_rhel7
  - test_pxf-gp[[gp_ver]]-hdp2-jdk11_on_rhel7
  - test_pxf-gp[[gp_ver]]-cdh_on_rhel7
  - test_pxf-gp[[gp_ver]]-file-no-impers_on_rhel7
  - test_pxf-gp[[gp_ver]]-s3_on_rhel7
  - test_pxf-gp[[gp_ver]]-s3-no-impers_on_rhel7
  - test_pxf-gp[[gp_ver]]-adl-no-impers_on_rhel7
  - test_pxf-gp[[gp_ver]]-gs-no-impers_on_rhel7
  - test_pxf-gp[[gp_ver]]-minio-no-impers_on_rhel7
  - test_pxf-gp[[gp_ver]]-hdp2-secure-multi-impers_on_rhel7
  - test_pxf-gp[[gp_ver]]-hdp2-secure-multi-no-impers_on_rhel7
  - test_pxf-gp[[gp_ver]]-hdp2-upgrade-extension_on_rhel7
{% set gp_ver = None %}
{% set gp_ver = 7 %}
- name: pxf_test-gp[[gp_ver]]_on_rhel8
  jobs:
  - test_pxf-gp[[gp_ver]]-hdp2-secure-multi-impers_on_rhel8
  - test_pxf-gp[[gp_ver]]-cli_on_rhel8
{% set gp_ver = None %}
- name: backwards_compatibility
  jobs:
{% set gp_ver = None %}
{% for gp_ver in range(5, 7) %}
  - test_pxf-gp[[gp_ver]]_backward_compatibility_on_rhel7
{% endfor %}
{% set gp_ver = None %}
{% for gp_ver in range(6, 8) %}
  - test_pxf-gp[[gp_ver]]_backward_compatibility_on_rhel8
{% endfor %}
{% set gp_ver = 6 %}
  - test_pxf-gp[[gp_ver]]_backward_compatibility_on_ubuntu18
{% set gp_ver = None %}
- name: promote_and_publish
  jobs:
  - promote_pxf_for_gp5_gp6_gp7_artifacts
  - publish_pxf-gp5_gp6_gp7_artifacts_to_gp-releng

## ======================================================================
## ANCHORS
## ======================================================================
anchors:
  [[macros.anchor_destroy_dataproc(1)]]
  [[macros.anchor_destroy_dataproc(2)]]
  [[macros.anchor_destroy_cluster('gpdb')]]
  [[macros.anchor_destroy_cluster('hadoop')]]
  [[macros.anchor_slack_notification(slack_notification)]]

## ======================================================================
## RESOURCE TYPES
## ======================================================================
resource_types:
  [[macros.resource_type_registry_image('terraform', 'gcr.io/data-gpdb-ud/terraform-resource', '0.11.15')]]
  [[macros.resource_type_registry_image('terraform-0.14.10', 'ljfranklin/terraform-resource', '0.14.10')]]
  [[macros.resource_type_registry_image('gcs', 'frodenas/gcs-resource', '')]]
  [[macros.resource_type_registry_image('slack-notification', 'cfcommunity/slack-notification-resource', 'latest')]]

## ======================================================================
## RESOURCES
## ======================================================================
resources:
  [[macros.resource_pxf_dependencies('build')]]
  [[macros.resource_pxf_dependencies('automation')]]

## ---------- Single Cluster tarballs ----------
  [[macros.resource_singlecluster('hdp2')]]
  [[macros.resource_singlecluster('hdp3')]]
  [[macros.resource_singlecluster('cdh')]]

## ---------- Github Repos ----------
  [[macros.resource_github_repo('pxf')]]

{% if multinode or multinode_no_impersonation or file or gp7_cli or gp7_multinode %}
  [[macros.resource_github_repo('ccp')]]
{% endif %}

## ---------- RelEng Drop Artifacts ----------
{% call(x) macros.for_each_config(build_test_pxf_combinations) %}
    {% include 'resources/release-artifact-tpl.yml' %}
{% endcall %}

{% for gp_ver in range(5, 8) %}
- name: pxf_gp[[gp_ver]]_osl_to_releng
  type: gcs
  source:
    bucket: ((ud/pxf/[[ environment ]]/releng-drop-bucket-name))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: ((ud/pxf/common/releng-osl-drop-path))/gpdb[[gp_ver]]/((ud/pxf/common/osl-file-prefix))_(.*)_GA.txt

- name: pxf_gp[[gp_ver]]_odp_to_releng
  type: gcs
  source:
    bucket: ((ud/pxf/[[ environment ]]/releng-drop-bucket-name))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: ((ud/pxf/common/releng-odp-drop-path))/gpdb[[gp_ver]]/((ud/pxf/common/odp-file-prefix))-(.*)-ODP.tar.gz
{% endfor %}
{% set gp_ver = None %}


## ---------- RelEng Drop Artifacts for tarballs ----------
{% call(x) macros.for_each_config(build_test_pxf_combinations) %}
    {% include 'resources/release-tarball-artifact-tpl.yml' %}
{% endcall %}

## ---------- PXF ShipIt resources ----------
- name: pxf_shipit_file
  type: gcs
  icon: google-drive
  source:
    bucket: ((ud/pxf/common/releases-bucket-name))
    json_key: ((ud/pxf/secrets/pxf-storage-service-account-key))
    regexp: [[ environment ]]/shipit/greenplum-pxf-(.*).txt

## ---------- Docker Images ----------
{% call(x) macros.for_each_config(build_test_pxf_combinations) %}
    {% include 'resources/pxf-test-image-tpl.yml' %}
{% endcall %}
{% set gp_ver = None %}

  [[macros.resource_registry_image('rpmrebuild-centos7-image', 'gcr.io/data-gpdb-ud/rpmrebuild-centos7', 'latest')]]
  [[macros.resource_registry_image('rpmrebuild-rocky8-image', 'gcr.io/data-gpdb-ud/rpmrebuild-rocky8', 'latest')]]

  [[macros.resource_registry_image('ccp-7-image', 'gcr.io/data-gpdb-public-images/ccp', 'latest')]]

  [[macros.resource_registry_image('google-cloud-sdk-slim-image', 'google/cloud-sdk', '402.0.0-slim')]]

{% if slack_notification %}
  [[macros.resource_slack_notification('slack-alert', 'ud-pipeline-bot-dev-webhook')]]
  [[macros.resource_slack_notification('notify-releng', 'ud-pipeline-bot-gp-releng-webhook')]]
{% endif %}

## ---------- Greenplum Packages ----------
{% call(x) macros.for_each_config(build_test_pxf_combinations) %}
    {% set i = 0 %}
    {% if x.os_ver == '9' %}
        {# define RPMs for rocky9 until they are released into standard locations #}
        {% include 'resources/greenplum-rocky9-package-tpl.yml' %}
    {% else %}
        {% include 'resources/greenplum-package-tpl.yml' %}
    {% endif %}
    {% set i = None %}
{% endcall %}

## ---------- PXF 5 (for GPDB 6) Artifact ---------------
- name: pxf5_gp6_rhel7_released
  type: gcs
  source:
    bucket: ((ud/pxf/prod/releng-drop-bucket-name))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: ((ud/pxf/common/releng-drop-path))/gpdb6/pxf-gp6-5.(.*)-2.el7.x86_64.rpm

## ---------- PXF 6.6 (for GPDB 6) Artifact ---------------
# This is for extension upgrade testing. PXF 6.6.X contains extension version 2.0. PXF 6.7.+ contains version 2.1
- name: pxf6_6_gp6_rhel7_released
  type: gcs
  source:
    bucket: ((ud/pxf/prod/releng-drop-bucket-name))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: ((ud/pxf/common/releng-drop-path))/gpdb6/pxf-gp6-(6.6.*)-2.el7.x86_64.rpm

## ---------- PXF Build Artifacts ----------
{% call(x) macros.for_each_config(build_test_pxf_combinations) %}
    {% include 'resources/pxf-artifact-tpl.yml' %}
{% endcall %}

## ---------- Auxiliary Resources ----------
- name: terraform
  type: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
      GOOGLE_CREDENTIALS: ((ud/pxf/secrets/ccp-ci-service-account-key))
    vars:
      project_id: ((ud/pxf/common/google-project-id))
    storage:
      access_key_id: ((tf-machine-access-key-id))
      secret_access_key: ((tf-machine-secret-access-key))
      region_name: ((ud/common/aws-region))
      bucket: ((ud/pxf/common/tf-bucket-name))
      bucket_path: ((tf-bucket-path))

- name: terraform_ipa_hadoop
  type: terraform-0.14.10
  source:
    env:
      GOOGLE_CREDENTIALS: ((ud/pxf/secrets/ipa-ccp-ci-service-account-key))
    delete_on_failure: true
    storage:
      bucket: ((ud/pxf/common/tf-bucket-name))
      bucket_path: ((ud/pxf/common/tf-bucket-path-hadoop))
      region_name: ((ud/common/aws-region))
      access_key_id: ((tf-machine-access-key-id))
      secret_access_key: ((tf-machine-secret-access-key))

## ======================================================================
## JOBS
## ======================================================================
jobs:

## ---------- Build and Basic Singlenode Test Swimlanes ----------

{# include a build job for all OS other than OEL (which does not have a separate build job) #}
{% call(x) macros.for_each_config(build_test_pxf_combinations) %}
    {% if x.test_os != 'oel' %}
        {% include 'jobs/build-tpl.yml' %}
    {% endif %}
{% endcall %}

{# include a non-FDW test job for all OS other than OEL (unless requested in the Makefile) #}
{% call(x) macros.for_each_config(build_test_pxf_combinations) %}
    {% if x.test_os != 'oel' or oel7 %}
        {% do x.update({'use_fdw': 'false'}) %}
        {% include 'jobs/test-tpl.yml' %}
    {% endif %}
{% endcall %}

{# include an FDW test job if supported by the swimlane #}
{% call(x) macros.for_each_config(build_test_pxf_combinations) %}
    {% if x.test_fdw is sameas true %}
        {% do x.update({'use_fdw': 'true'}) %}
        {% include 'jobs/test-tpl.yml' %}
    {% endif %}
{% endcall %}

## ---------- Testing Gate ----------
- name: testing-gate-for-pxf-gp
  plan:
  - in_parallel:
    - get: pxf-src
      trigger: true
      passed:
{% call(x) macros.for_each_config(build_test_pxf_combinations) %}
    {% if x.test_fdw is sameas true %}
        {% set extension = 'fdw' %}
      - test-pxf-gp[[x.gp_ver]]-[[extension]]-hdp2-[[x.test_platform]]
    {% endif %}
    {% set extension = 'ext' %}
      - test-pxf-gp[[x.gp_ver]]-[[extension]]-hdp2-[[x.test_platform]]
{% endcall %}
{% call(x) macros.for_each_config(build_test_pxf_combinations) %}
    {% if x.test_fdw is sameas true %}
        {% set extension = 'fdw' %}
    {% else %}
        {% set extension = 'ext' %}
    {% endif %}
    {% if x.test_os != 'oel' %}
    - get: pxf-gp[[x.gp_ver]]-tarball-[[x.release_platform]]
      passed:
        {% if x.test_fdw is sameas true %}
            {% set extension = 'fdw' %}
      - test-pxf-gp[[x.gp_ver]]-[[extension]]-hdp2-[[x.test_platform]]
        {% endif %}
        {% set extension = 'ext' %}
      - test-pxf-gp[[x.gp_ver]]-[[extension]]-hdp2-[[x.test_platform]]
        {% if x.test_platform == 'centos7' and x.gp_ver == '6' %}
      - test-pxf-gp[[x.gp_ver]]-[[extension]]-hdp2-oel7
        {% endif %}
    - get: gpdb[[x.gp_ver]]-[[x.release_platform]]-[[x.pkg_type]]-latest-0
      passed:
      - promote_pxf_for_gp5_gp6_gp7_artifacts
    - get: pxf_shipit_file
      trigger: true
    - get: google-cloud-sdk-slim-image
    - get: rpmrebuild-centos7-image
    - get: rpmrebuild-rocky8-image
    - get: gpdb6-pxf-dev-ubuntu18-image
  - task: get_pxf-gp5_and_pxf-gp6_artifacts_from_releases_directory
    image: google-cloud-sdk-slim-image
    file: pxf_src/concourse/tasks/get_pxf_release_artifacts.yml
    params:
      GCS_ODP_PATH: [[ environment ]]/ODP
      GCS_OSL_PATH: [[ environment ]]/OSL
      GCS_RELEASES_BUCKET: ((ud/pxf/common/releases-bucket-name))
      GCS_RELEASES_PATH: [[ environment ]]/releases
      GOOGLE_CREDENTIALS: ((ud/pxf/secrets/pxf-storage-service-account-key))
  #  - in_parallel: does not work since all tasks modify pxf_artifacts
{% for gp_ver in range(5, 7) %}
  - task: add_osl_file_to_pxf-gp[[gp_ver]]_rpm_on_rhel7
    image: rpmrebuild-centos7-image
    file: pxf_src/concourse/tasks/add_osl_rpm.yml
    params:
      GP_VER: [[gp_ver]]
      REDHAT_MAJOR_VERSION: 7
{% endfor %}
{% set gp_ver = 6 %}
  - task: add_osl_file_to_pxf-gp[[gp_ver]]_rpm_on_rhel8
    image: rpmrebuild-rocky8-image
    file: pxf_src/concourse/tasks/add_osl_rpm.yml
    params:
      GP_VER: [[gp_ver]]
      REDHAT_MAJOR_VERSION: 8
  - task: add_osl_file_to_pxf-gp[[gp_ver]]_deb_on_ubuntu18.04
    file: pxf_src/concourse/tasks/add_osl_deb.yml
    image: gpdb[[gp_ver]]-pxf-dev-ubuntu18-image
    params:
      GP_VER: [[gp_ver]]
{% set gp_ver = 7 %}
  - task: add_osl_file_to_pxf-gp[[gp_ver]]_rpm_on_rhel8
    image: rpmrebuild-rocky8-image
    file: pxf_src/concourse/tasks/add_osl_rpm.yml
    params:
      GP_VER: [[gp_ver]]
      REDHAT_MAJOR_VERSION: 8
{% set gp_ver = None %}
{% for gp_ver in range(5, 7) %}
  - task: generate_pxf_binary_tarball_from_pxf-gp[[gp_ver]]_on_rhel7_rpm
    file: pxf_src/concourse/tasks/generate_tarball_from_rpm.yml
    image: rpmrebuild-centos7-image
    params:
      GP_VER: [[gp_ver]]
{% endfor %}
  - task: generate_slack_message
    image: google-cloud-sdk-slim-image
    file: pxf_src/concourse/tasks/generate_slack_message.yml
    params:
      PXF_OSL_FILE_PREFIX: ((ud/pxf/common/osl-file-prefix))
      PXF_ODP_FILE_PREFIX: ((ud/pxf/common/odp-file-prefix))
      PXF_SLACK_CHANNEL_NAME: ((ud/pxf/common/slack-channel-name))
      PXF_SLACK_CHANNEL_LINK: ((ud/pxf/secrets/slack-channel-link))
      RELENG_DROP_URL: gs://((ud/pxf/[[ environment ]]/releng-drop-bucket-name))/((ud/pxf/common/releng-drop-path))
      RELENG_OSL_DROP_URL: gs://((ud/pxf/[[ environment ]]/releng-drop-bucket-name))/((ud/pxf/common/releng-osl-drop-path))
      RELENG_ODP_DROP_URL: gs://((ud/pxf/[[ environment ]]/releng-drop-bucket-name))/((ud/pxf/common/releng-odp-drop-path))
  - in_parallel:
    - put: pxf_gp5_rhel7_release_to_releng
      params:
        file: pxf_artifacts/licensed/pxf-gp5-*-2.el7.x86_64.rpm
    - put: pxf_gp6_rhel7_release_to_releng
      params:
        file: pxf_artifacts/licensed/pxf-gp6-*-2.el7.x86_64.rpm
    - put: pxf_gp6_rhel8_release_to_releng
      params:
        file: pxf_artifacts/licensed/pxf-gp6-*-2.el8.x86_64.rpm
    - put: pxf_gp6_ubuntu18_release_to_releng
      params:
        file: pxf_artifacts/licensed/pxf-gp6-*-2-ubuntu18.04-amd64.deb
    - put: pxf_gp7_rhel8_release_to_releng
      params:
        file: pxf_artifacts/licensed/pxf-gp7-*-2.el8.x86_64.rpm
    - put: pxf_gp5_tarball_release_to_releng
      params:
        file: pxf_artifacts/licensed/gp5/pxf-gp5-*-el7.x86_64.tar.gz
    - put: pxf_gp6_tarball_release_to_releng
      params:
        file: pxf_artifacts/licensed/gp6/pxf-gp6-*-el7.x86_64.tar.gz
{% for gp_ver in range(5, 8) %}
    - put: pxf_gp[[gp_ver]]_odp_to_releng
      params:
        file: pxf_artifacts/((ud/pxf/common/odp-file-prefix))*.tar.gz
    - put: pxf_gp[[gp_ver]]_osl_to_releng
      params:
        file: pxf_artifacts/((ud/pxf/common/osl-file-prefix))*.txt
{% endfor %}
{% if slack_notification %}
  - put: notify-releng
    params:
      text_file: pxf_artifacts/slack_message.txt
      text: |
        ${TEXT_FILE_CONTENT}

        ---
        Generated by UD CI build job: ${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}
        UD CI build job link: ${ATC_EXTERNAL_URL}/teams/main/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}
{% endif %}
