{# Template for the PXF certification job definition.
 #
 # Expects a dictionary with the name 'x' to be set as defined in macros.j2 file
 #
 #}
{% do x.update({'job_name': 'certify-gpdb' ~ x.gp_ver ~ '-with-pxf-gp' ~ x.gp_ver ~ '-' ~ x.test_platform}) %}
{% do x.update({'gpdb_tarball_name': 'gpdb' ~ x.gp_ver ~ '-tarball-' ~ x.test_platform}) %}
{% do x.update({'pxf_package_name': 'pxf-gp' ~ x.gp_ver ~ '-' ~ x.pkg_type ~ '-' ~ x.test_platform}) %}

- name: [[x.job_name]]
  plan:
  - in_parallel:
    - get: pxf_src
    - get: bin_gpdb
      resource: [[x.gpdb_tarball_name]]
      trigger: true
    - get: pxf_package
      resource: [[x.pxf_package_name]]
      trigger: true
    - get: gpdb[[x.gp_ver]]-pxf-dev-[[x.test_platform]]-image
    - get: ccp-7-image
    - get: pxf-automation-dependencies
    - get: singlecluster
      resource: singlecluster-hdp2
  - task: test-gpdb[[x.gp_ver]]-with-pxf-gp[[x.gp_ver]]-hdp2-[[x.test_platform]]
    <<: *slack_alert
    file: pxf_src/concourse/tasks/test_certification.yml
    image: gpdb[[x.gp_ver]]-pxf-dev-[[x.test_platform]]-image
    params:
      ACCESS_KEY_ID: ((tf-machine-access-key-id))
      GP_VER: [[x.gp_ver]]
      GROUP: gpdb,proxy,profile
      SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
  - task: upload_certification_for_gpdb-[[x.gp_ver]]_with_pxf-gp[[x.gp_ver]]-hdp2_on_[[x.test_platform]]
    file: pxf_src/concourse/tasks/certification_upload.yml
    image: ccp-7-image
    params:
      GOOGLE_CREDENTIALS: ((ud/pxf/secrets/pxf-storage-service-account-key))
      GP_VER: [[x.gp_ver]]
      PXF_CERTIFICATION_FOLDER: data-gpdb-ud-pxf-build/prod/certifications