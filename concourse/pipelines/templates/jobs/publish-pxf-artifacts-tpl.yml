{# Template for the PXF publish job definition.
 #
 # As this is a sub-template that is called by the macros.js file, calls in this file to other defined
 # macros do not need to be pre-pended with `macros` as the entire macros file is already in scope.
 #
 # Expects a dictionary with the name 'x' to be set as defined in macros.j2 file
 #
 # Also expects the following variables to be set:
 # build_test_pxf_combinations     - the full set config dictionaries
 # environment                     - either prod or dev depending on pipeline setting
 # pxf_release_repackage_images   - a dictionary containing the set of supported build platforms
 #                                   and the values are the images needed for release repackaging
 #}

{% do x.update({'job_name': 'publish-pxf-artifacts-to-gp-releng'}) %}
- name: [[x.job_name]]
  plan:
  - in_parallel:
    - get: pxf_src
      resource: pxf-src
      passed:
      - promote-pxf-artifacts
    - get: pxf_shipit_file
      resource: pxf-shipit-file
      trigger: true
    - get: google-cloud-sdk-slim-image
{% for build_platform in pxf_release_repackage_images.values() %}
    - get: [[build_platform]]
{% endfor %}
  - task: get-pxf-gp5-and-pxf-gp6-artifacts-from-releases-directory
    image: google-cloud-sdk-slim-image
    file: pxf_src/concourse/tasks/get_pxf_release_artifacts.yml
    params:
      GCS_ODP_PATH: [[environment]]/ODP
      GCS_OSL_PATH: [[environment]]/OSL
      GCS_RELEASES_BUCKET: ((ud/pxf/common/releases-bucket-name))
      GCS_RELEASES_PATH: [[environment]]/releases
      GOOGLE_CREDENTIALS: ((ud/pxf/secrets/pxf-storage-service-account-key))
  #  - in_parallel: does not work since all tasks modify pxf_artifacts
{% call(x) for_each_config(build_test_pxf_combinations) %}
    {% if x.test_os != 'oel' %}
  - task: add-osl-file-to-pxf-gp[[x.gp_ver]]-[[x.pkg_type]]-[[x.test_platform]]
    image: [[x.pxf_release_repackage_image]]
    file: pxf_src/concourse/tasks/add_osl_[[x.pkg_type]].yml
    params:
      GP_VER: [[x.gp_ver]]
    {% if x.test_os != 'ubuntu' %}
      REDHAT_MAJOR_VERSION: [[x.os_ver]]
    {% endif %}
    {% endif %}
{% endcall %}
{% call(x) for_each_config(build_test_pxf_combinations) %}
    {% if x.generate_release_tarball is sameas true %}
  - task: generate-pxf-binary-tarball-from-pxf-gp[[x.gp_ver]]-[[x.test_platform]]-rpm
    file: pxf_src/concourse/tasks/generate_tarball_from_[[x.pkg_type]].yml
    image: [[x.pxf_release_repackage_image]]
    params:
      GP_VER: [[x.gp_ver]]
    {% endif %}
{% endcall %}
  - task: generate-gchat-message
    image: google-cloud-sdk-slim-image
    file: pxf_src/concourse/tasks/generate_gchat_message.yml
    params:
      PXF_OSL_FILE_PREFIX: ((ud/pxf/common/osl-file-prefix))
      PXF_ODP_FILE_PREFIX: ((ud/pxf/common/odp-file-prefix))
      PXF_GCHAT_SPACE_NAME: ((ud/pxf/common/google-space-name))
      PXF_GCHAT_SPACE_LINK: ((ud/pxf/secrets/google-space-link))
      RELENG_DROP_URL: gs://((ud/pxf/[[environment]]/releng-drop-bucket-name))/((ud/pxf/common/releng-drop-path))
      RELENG_OSL_DROP_URL: gs://((ud/pxf/[[environment]]/releng-drop-bucket-name))/((ud/pxf/common/releng-osl-drop-path))
      RELENG_ODP_DROP_URL: gs://((ud/pxf/[[environment]]/releng-drop-bucket-name))/((ud/pxf/common/releng-odp-drop-path))
  - in_parallel:
{% call(x) for_each_config(build_test_pxf_combinations) %}
    {% if x.build_platform == x.test_platform %}
    - put: pxf-gp[[x.gp_ver]]-[[x.test_platform]]-release-to-releng
      params:
        file: pxf_artifacts/licensed/[[x.pxf_release_package_filename_regex]]
    {% endif %}
    {% if x.generate_release_tarball is sameas true %}
    - put: pxf-gp[[x.gp_ver]]-tarball-release-to-releng
      params:
        file: pxf_artifacts/licensed/gp[[x.gp_ver]]/[[x.pxf_release_tarball_filename_regex]]
    {% endif %}
{% endcall %}
{% call(x) for_each_gp_ver(build_test_pxf_combinations) %}
    - put: pxf-gp[[x.gp_ver]]-odp-to-releng
      params:
        file: pxf_artifacts/((ud/pxf/common/odp-file-prefix))*.tar.gz
    - put: pxf-gp[[x.gp_ver]]-osl-to-releng
      params:
        file: pxf_artifacts/((ud/pxf/common/osl-file-prefix))*.txt
{% endcall %}
{% if gchat_notification %}
  - put: notify-releng
    params:
      text_file: pxf_artifacts/gchat_message.txt
      text: |
        ${TEXT_FILE_CONTENT}

        ---
        Generated by UD CI build job: ${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}
        UD CI build job link: ${ATC_EXTERNAL_URL}/teams/main/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}
{% endif %}
