#!/usr/bin/env bash

if [ "$#" -lt "2" ]; then
    echo "USAGE: deploy [ prod [master|5x] ] | [ dev [master|5x] [config] ]"
    exit 1
fi

DEPLOY_ENV=${1}
# Only valid values for the first argument are dev and prod
if ! [[ "${DEPLOY_ENV}" == "dev" || "${DEPLOY_ENV}" == "prod" ]]; then
    echo "USAGE: deploy [ prod master|5x ] | [ dev master|5x [config] ]"
    exit 1
fi
BRANCH_ALIAS=${2}
# Only valid values for the second argument are master and 5x
if ! [[ "${BRANCH_ALIAS}" == "master" || "${BRANCH_ALIAS}" == "5x" ]]; then
    echo "USAGE: deploy [ prod master|5x ] | [ dev master|5x [config] ]"
    exit 1
fi

if [ "${BRANCH_ALIAS}" == "5x" ]; then
    BRANCH="5X_STABLE"
    ICW_GREEN_BUCKET="gpdb5-stable-concourse-builds"
else
    BRANCH="master"
    ICW_GREEN_BUCKET="gpdb5-assert-concourse-builds"
fi

# dev pipeline
if [[ "${DEPLOY_ENV}" == "dev" ]]; then
    CONFIG=${3:-${USER}}
    FEATURE=${3:-""}

    if [ ! "${CONFIG}" == "${USER}" ]; then
        CONFIG="${USER}-${CONFIG}"
    fi
    YML_FILE=".${CONFIG}.yml"
    # Copy default.yml if config file does not exist
    if [ ! -f ./${YML_FILE} ]; then
        cp ./default.yml ./${YML_FILE}
        if [ ! -z "${FEATURE}" ]; then
            sed -i -e "s/pxf-git-branch: master/pxf-git-branch: ${FEATURE}/g" ./${YML_FILE}
        fi
    fi
    TEST_ENV="dev"
    PREFIX="dev/${CONFIG}"
    PIPELINE_NAME="dev:pxf_${CONFIG}_${BRANCH_ALIAS}"
    TARGET="ud"

# prod pipeline
else
    YML_FILE="default.yml"
    PREFIX="prod/gpdb_branch"
    PIPELINE_NAME="pxf_${BRANCH}"
    TARGET="ud"
fi

echo "Deploying ${PIPELINE_NAME} pipeline with custom values from ${YML_FILE} ..."

cmd="fly -t ${TARGET} set-pipeline \
    -c ~/workspace/pxf/concourse/pxf_pipeline.yml \
    -l ~/workspace/gp-continuous-integration/secrets/gpdb_common-ci-secrets.yml \
    -l ~/workspace/gp-continuous-integration/secrets/ccp_ci_secrets_ud.yml \
    -l ~/workspace/pxf/concourse/pxf-multinode-params.yml \
    -l ${YML_FILE} \
    -v folder-prefix=${PREFIX} -v test-env=${TEST_ENV} \
    -v gpdb-branch=${BRANCH} -v icw_green_bucket=${ICW_GREEN_BUCKET} \
    -p ${PIPELINE_NAME}"


echo "${cmd}"

# Execute cmd string (deploy pipeline)
eval ${cmd}
