================================================================================
TINC (a.k.a. "TINC Is Not Cdbfast") ============================================
================================================================================

	TINC is a new attempt at Greenplum's core testing infrastructure. From it's
name, it should be clear that TINC is designed with the pitfalls of its 
predecessor in mind. The most important of these requirements is a philosophy
of rigid design at the core of the project. CDBFast lacked this quality, and
it's one that we'll strongly adhere to under TINC.

----------------------------------------
Rules ----------------------------------
----------------------------------------

	Rule #1: Read PEP8! <http://www.python.org/dev/peps/pep-0008/>

	Rule #2: See Rule #1.

The above usually covers most concerns. Here are a few extra ones we feel
strongly about:

* Always source greenplum_path.sh, then tinc_env.sh (in that order.)
* Use unittest asserts, rather than python's "assert" keyword, when possible.
  This will result in more descriptive output during AssertionErrors.
* Alphabetize imports. (It's reasonable to break this for grouping. As with
  all of these rules, readability is the key.)
* Add docstrings and leverage epydoc.
* No numbering in test case name.
* Before checking in your change, run `make checkcode` and fix your
	- Errors
	- Unused imports, unused variables and unused arguments
  or the GPDB-TINC-main-quality will fail

----------------------------------------
Contributing to the Core ---------------
----------------------------------------

	See tinctest/README.

----------------------------------------
Contributing to the Testlink Integration
----------------------------------------
	
	See testlink/README.greenplum.
